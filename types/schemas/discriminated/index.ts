import {
  ApplicationTypeKeys,
  PrimaryApplicationTypes,
} from '../digitalPlanningApplication/enums/ApplicationTypes';
import {ApplicationData} from './ApplicationData';
import {User} from './User';

interface GenericApplication<
  TPrimary extends PrimaryApplicationTypes,
  TGranular extends ApplicationTypeKeys,
> {
  applicationType: TGranular;
  data: {
    user: User<TPrimary>;
    application: ApplicationData<TPrimary, TGranular>;
  };
}

/**
 * @description Application for a "Planning Permission" project
 */
export type PlanningPermissionApplication = GenericApplication<'pp', 'pp'>;

/**
 * @description Application for a "Prior Approval" project
 */
export type PriorApprovalApplication = GenericApplication<'pa', 'pa'>;

export type BaseWTT = GenericApplication<'wtt', 'wtt'>;
export type ConsentWTT = GenericApplication<'wtt', 'wtt.consent'>;
export type NoticeWTT = GenericApplication<'wtt', 'wtt.notice'>;

/**
 * @description Application for a "Works to trees" project
 */
export type WorksToTreesApplications = BaseWTT | ConsentWTT | NoticeWTT;

/**
 * @title App
 * @description The root specification for a planning application in England generated by a digital planning service
 */
export type App =
  | PlanningPermissionApplication
  | PriorApprovalApplication
  | WorksToTreesApplications;

const test: App = {
  applicationType: 'wtt.consent',
  data: {
    user: {
      role: 'agent',
      wttSpecificProperty: true,
    },
    application: {
      applicationType: 'wtt.consent',
      wttSpecificProperty: 123,
      somethingShared: 'abc',
    },
  },
};
