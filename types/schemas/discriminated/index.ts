import {
  ApplicationTypeKeys,
  PrimaryApplicationTypes,
} from '../digitalPlanningApplication/enums/ApplicationTypes';
import {ApplicationData} from './ApplicationData';
import {User} from './User';

/**
 * @internal
 */
export type ApplicationTypeOf<T extends PrimaryApplicationTypes> = Extract<
  ApplicationTypeKeys,
  `${T}.${string}`
>;

interface GenericApplication<T extends PrimaryApplicationTypes> {
  applicationType: ApplicationTypeOf<T>;
  data: {
    user: User<T>;
    application: ApplicationData<T>;
  };
}

/**
 * @description Application for a "Planning Permission" project
 */
export type PlanningPermissionApplication = GenericApplication<'pp'>;

/**
 * @description Application for a "Prior Approval" project
 */
export type PriorApprovalApplication = GenericApplication<'pa'>;

/**
 * @description Application for a "Works to trees" project
 */
export type WorksToTreesApplication = GenericApplication<'wtt'>;

/**
 * @title App
 * @description The root specification for a planning application in England generated by a digital planning service
 */
export type App =
  | PlanningPermissionApplication
  | PriorApprovalApplication
  | WorksToTreesApplication;

const test: App = {
  applicationType: 'wtt.consent',
  data: {
    user: {
      role: 'agent',
      wttSpecificProperty: true,
    },
    application: {
      applicationType: 'wtt.notice',
      wttSpecificProperty: 123,
    },
  },
};
