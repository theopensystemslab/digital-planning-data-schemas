/**
 * ATTENTION. This code was AUTO GENERATED by ts2typebox. While I don't know
 * your use case, there is a high chance that direct changes to this file get
 * lost. Consider making changes to the underlying Typescript code you use to
 * generate this file instead. The default file is called "types.ts", perhaps
 * have a look there! :]
 */

import {Type, type Static, CloneType} from '@sinclair/typebox';
import {OSAddress, ProposedAddress} from './Addresses';
import {Region} from './Regions';
import {GeoBoundary} from './Boundaries';

export type Site = Static<typeof Site>;
export const Site = Type.Object(
  {
    address: Type.Union([ProposedAddress, OSAddress], {
      description: 'The property address',
    }),
    localAuthorityDistrict: Type.Array(Type.String(), {
      description:
        'Current and historic UK Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local',
    }),
    ward: Type.String({
      description:
        'Name of the ward sourced from planning.data.gov.uk/dataset/ward',
    }),
    region: CloneType(Region, {
      description:
        'Name of the region sourced from planning.data.gov.uk/dataset/region; "London" is a proxy for the Greater London Authority',
    }),
    boundary: Type.Optional(
      CloneType(GeoBoundary, {
        description:
          'HM Land Registry Index polygon for this property, commonly referred to as the blue line boundary, sourced from planning.data.gov.uk/dataset/title',
      }),
    ),
  },
  {description: 'Details about the property as the site exists now'},
);
