{
  "$id": "@next",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "anyOf": [
    {
      "$ref": "#/definitions/LDC"
    },
    {
      "$ref": "#/definitions/PA"
    },
    {
      "$ref": "#/definitions/PP"
    },
    {
      "$ref": "#/definitions/Listed"
    },
    {
      "$ref": "#/definitions/LandDrainageConsent"
    }
  ],
  "definitions": {
    "Agent": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "$ref": "#/definitions/ApplicantAddress",
          "description": "Address information for the applicant"
        },
        "agent": {
          "additionalProperties": false,
          "description": "Contact information for the agent or proxy",
          "properties": {
            "address": {
              "$ref": "#/definitions/UserAddress"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            }
          },
          "required": [
            "address",
            "email",
            "name",
            "phone"
          ],
          "type": "object"
        },
        "company": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "name": {
          "additionalProperties": false,
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "first",
            "last"
          ],
          "type": "object"
        },
        "phone": {
          "additionalProperties": false,
          "properties": {
            "primary": {
              "type": "string"
            }
          },
          "required": [
            "primary"
          ],
          "type": "object"
        },
        "siteContact": {
          "$ref": "#/definitions/SiteContact",
          "description": "Contact information for the site visit"
        },
        "type": {
          "description": "The type of applicant",
          "enum": [
            "individual",
            "company",
            "charity",
            "public",
            "parishCouncil"
          ],
          "type": "string"
        }
      },
      "required": [
        "address",
        "agent",
        "email",
        "name",
        "phone",
        "siteContact",
        "type"
      ],
      "type": "object"
    },
    "ApplicantAddress": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "sameAsSiteAddress": {
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "sameAsSiteAddress"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/ApplicantAddressNotSameSite"
        }
      ]
    },
    "ApplicantAddressNotSameSite": {
      "additionalProperties": false,
      "properties": {
        "country": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "sameAsSiteAddress": {
          "const": false,
          "type": "boolean"
        },
        "town": {
          "type": "string"
        }
      },
      "required": [
        "line1",
        "postcode",
        "sameAsSiteAddress",
        "town"
      ],
      "type": "object"
    },
    "ApplicantBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/BaseApplicant"
        },
        {
          "$ref": "#/definitions/Agent"
        }
      ]
    },
    "ApplicationDeclaration": {
      "additionalProperties": false,
      "description": "Declarations about the accuracy of this application and any personal connections to the receiving authority",
      "properties": {
        "accurate": {
          "type": "boolean"
        },
        "connection": {
          "additionalProperties": false,
          "properties": {
            "description": {
              "type": "string"
            },
            "value": {
              "enum": [
                "employee",
                "relation.employee",
                "electedMember",
                "relation.electedMember",
                "none"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      },
      "required": [
        "accurate",
        "connection"
      ],
      "type": "object"
    },
    "ApplicationFee": {
      "additionalProperties": false,
      "description": "The costs associated with this application",
      "properties": {
        "calculated": {
          "description": "Total calculated fee in GBP",
          "type": "number"
        },
        "category": {
          "additionalProperties": false,
          "description": "Breakdown of calculated fee in GBP by category of development, based on the scales defined in The Town and Country Planning Regulations https://www.legislation.gov.uk/uksi/2012/2920/schedule/1/part/2",
          "properties": {
            "eight": {
              "description": "Category 8 - Car parks or access roads",
              "type": "number"
            },
            "eleven": {
              "additionalProperties": false,
              "properties": {
                "one": {
                  "description": "Category 11(1) - Mining operations",
                  "type": "number"
                },
                "two": {
                  "description": "Category 11(2) - Other operations",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "five": {
              "description": "Category 5 - Plant equipment or machinery",
              "type": "number"
            },
            "four": {
              "description": "Category 4 - Glasshouses on agricultural land",
              "type": "number"
            },
            "fourteen": {
              "description": "Category 14 - Other change of use",
              "type": "number"
            },
            "nine": {
              "description": "Category 9 - Exploratory drilling",
              "type": "number"
            },
            "one": {
              "description": "Category 1 - New homes",
              "type": "number"
            },
            "sixAndSeven": {
              "description": "Category 6 and 7 - Home or curtilage of home",
              "type": "number"
            },
            "ten": {
              "description": "Category 10 - Winning and working of oil or natural gas",
              "type": "number"
            },
            "thirteen": {
              "description": "Category 13 - Waste disposal",
              "type": "number"
            },
            "three": {
              "description": "Category 3 - Agricultural buildings",
              "type": "number"
            },
            "twelve": {
              "additionalProperties": false,
              "properties": {
                "one": {
                  "description": "Category 12(1) - Change of use from single home to homes",
                  "type": "number"
                },
                "two": {
                  "description": "Category 12(2) - Change of use to home",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "two": {
              "description": "Category 2 - Other new buildings",
              "type": "number"
            }
          },
          "type": "object"
        },
        "exemption": {
          "additionalProperties": false,
          "properties": {
            "disability": {
              "type": "boolean"
            },
            "resubmission": {
              "type": "boolean"
            }
          },
          "required": [
            "disability",
            "resubmission"
          ],
          "type": "object"
        },
        "payable": {
          "description": "Total payable fee after any exemptions or reductions in GBP",
          "type": "number"
        },
        "reduction": {
          "additionalProperties": false,
          "properties": {
            "alternative": {
              "type": "boolean"
            },
            "parishCouncil": {
              "type": "boolean"
            },
            "sports": {
              "type": "boolean"
            }
          },
          "required": [
            "alternative",
            "parishCouncil",
            "sports"
          ],
          "type": "object"
        },
        "reference": {
          "additionalProperties": false,
          "properties": {
            "govPay": {
              "description": "GOV.UK Pay payment reference number",
              "type": "string"
            }
          },
          "required": [
            "govPay"
          ],
          "type": "object"
        }
      },
      "required": [
        "calculated",
        "payable",
        "exemption",
        "reduction"
      ],
      "type": "object"
    },
    "ApplicationFeeNotApplicable": {
      "additionalProperties": false,
      "description": "An indicator that an application fee does not apply to this application type or journey",
      "properties": {
        "notApplicable": {
          "const": true,
          "type": "boolean"
        }
      },
      "required": [
        "notApplicable"
      ],
      "type": "object"
    },
    "Area": {
      "$id": "#Area",
      "additionalProperties": false,
      "properties": {
        "hectares": {
          "type": "number"
        },
        "squareMetres": {
          "type": "number"
        }
      },
      "required": [
        "squareMetres"
      ],
      "type": "object"
    },
    "BBox": {
      "anyOf": [
        {
          "items": {
            "type": "number"
          },
          "maxItems": 4,
          "minItems": 4,
          "type": "array"
        },
        {
          "items": {
            "type": "number"
          },
          "maxItems": 6,
          "minItems": 6,
          "type": "array"
        }
      ],
      "description": "Bounding box https://tools.ietf.org/html/rfc7946#section-5"
    },
    "BaseApplicant": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "$ref": "#/definitions/ApplicantAddress",
          "description": "Address information for the applicant"
        },
        "company": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "name": {
          "additionalProperties": false,
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "first",
            "last"
          ],
          "type": "object"
        },
        "phone": {
          "additionalProperties": false,
          "properties": {
            "primary": {
              "type": "string"
            }
          },
          "required": [
            "primary"
          ],
          "type": "object"
        },
        "siteContact": {
          "$ref": "#/definitions/SiteContact",
          "description": "Contact information for the site visit"
        },
        "type": {
          "description": "The type of applicant",
          "enum": [
            "individual",
            "company",
            "charity",
            "public",
            "parishCouncil"
          ],
          "type": "string"
        }
      },
      "required": [
        "address",
        "email",
        "name",
        "phone",
        "siteContact",
        "type"
      ],
      "type": "object"
    },
    "BasePlanningDesignation": {
      "anyOf": [
        {
          "const": "article4",
          "description": "Article 4 Direction area",
          "type": "string"
        },
        {
          "const": "article4.caz",
          "description": "Central Activities Zone (CAZ)",
          "type": "string"
        },
        {
          "const": "brownfieldSite",
          "description": "Brownfield site",
          "type": "string"
        },
        {
          "const": "designated",
          "description": "Designated land",
          "type": "string"
        },
        {
          "const": "designated.AONB",
          "description": "Area of Outstanding Natural Beauty (AONB)",
          "type": "string"
        },
        {
          "const": "designated.conservationArea",
          "description": "Conservation Area",
          "type": "string"
        },
        {
          "const": "designated.nationalPark",
          "description": "National Park",
          "type": "string"
        },
        {
          "const": "designated.nationalPark.broads",
          "description": "National Park - Broads",
          "type": "string"
        },
        {
          "const": "designated.WHS",
          "description": "UNESCO World Heritage Site or buffer zone",
          "type": "string"
        },
        {
          "const": "flood",
          "description": "Flood Risk Zone",
          "type": "string"
        },
        {
          "const": "flood.zone.1",
          "description": "Flood Risk Zone 1 - Low risk",
          "type": "string"
        },
        {
          "const": "flood.zone.2",
          "description": "Flood Risk Zone 2 - Medium risk",
          "type": "string"
        },
        {
          "const": "flood.zone.3",
          "description": "Flood Risk Zone 3 - High risk",
          "type": "string"
        },
        {
          "const": "greenBelt",
          "description": "Green Belt",
          "type": "string"
        },
        {
          "const": "listed",
          "description": "Listed Building",
          "type": "string"
        },
        {
          "const": "listed.grade.I",
          "description": "Listed Building - Grade I",
          "type": "string"
        },
        {
          "const": "listed.grade.II",
          "description": "Listed Building - Grade II",
          "type": "string"
        },
        {
          "const": "listed.grade.II*",
          "description": "Listed Building - Grade II*",
          "type": "string"
        },
        {
          "const": "locallyListed",
          "description": "Locally Listed Building",
          "type": "string"
        },
        {
          "const": "monument",
          "description": "Site of a Scheduled Monument",
          "type": "string"
        },
        {
          "const": "nature.ASNW",
          "description": "Ancient Semi-Natural Woodland (ASNW)",
          "type": "string"
        },
        {
          "const": "nature.ramsarSite",
          "description": "Ramsar site",
          "type": "string"
        },
        {
          "const": "nature.SAC",
          "description": "Special Area of Conservation (SAC)",
          "type": "string"
        },
        {
          "const": "nature.SPA",
          "description": "Special Protection Area (SPA)",
          "type": "string"
        },
        {
          "const": "nature.SSSI",
          "description": "Site of Special Scientific Interest (SSSI)",
          "type": "string"
        },
        {
          "const": "registeredPark",
          "description": "Historic Park or Garden",
          "type": "string"
        },
        {
          "const": "road.classified",
          "description": "Classified Road",
          "type": "string"
        },
        {
          "const": "tpo",
          "description": "Tree Preservation Order (TPO) or zone",
          "type": "string"
        }
      ]
    },
    "BuildingRegulation": {
      "$id": "#BuildingRegulation",
      "anyOf": [
        {
          "const": "m42",
          "description": "Part M4(2) of the Building Regulations 2010",
          "type": "string"
        },
        {
          "const": "m432a",
          "description": "Part M4(3)(2a) of the Building Regulations 2010",
          "type": "string"
        },
        {
          "const": "m432b",
          "description": "Part M4(3)(2b) of the Building Regulations 2010",
          "type": "string"
        },
        {
          "const": "none",
          "description": "None of these",
          "type": "string"
        }
      ],
      "description": "Building regulations"
    },
    "CalculateMetadata": {
      "$id": "#CalculateMetadata",
      "additionalProperties": false,
      "description": "Metadata associated with PlanX Calculate components used to determine fees throughout a service",
      "properties": {
        "description": {
          "type": "string"
        },
        "policyRefs": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "text": {
                "type": "string"
              },
              "url": {
                "$ref": "#/definitions/URL"
              }
            },
            "required": [
              "text"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CommunityInfrastructureLevy": {
      "additionalProperties": false,
      "description": "Details about the Community Infrastructure Levy planning charge, if applicable",
      "properties": {
        "result": {
          "enum": [
            "exempt.annexe",
            "exempt.extension",
            "exempt.selfBuild",
            "liable",
            "relief.charity",
            "relief.socialHousing"
          ],
          "type": "string"
        }
      },
      "required": [
        "result"
      ],
      "type": "object"
    },
    "ContactDetails": {
      "additionalProperties": false,
      "properties": {
        "company": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "name": {
          "additionalProperties": false,
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "first",
            "last"
          ],
          "type": "object"
        },
        "phone": {
          "additionalProperties": false,
          "properties": {
            "primary": {
              "type": "string"
            }
          },
          "required": [
            "primary"
          ],
          "type": "object"
        }
      },
      "required": [
        "name",
        "email",
        "phone"
      ],
      "type": "object"
    },
    "Date": {
      "format": "date",
      "type": "string"
    },
    "DateTime": {
      "description": "Regex-based implementation of iso-date-time until available in ajv-formats@3.0.0",
      "format": "date-time",
      "pattern": "^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(([Zz])|([\\+|\\-]([01][0-9]|2[0-3]):[0-5][0-9]))$",
      "type": "string"
    },
    "DevelopmentType": {
      "$id": "#DevelopmentType",
      "anyOf": [
        {
          "const": "changeOfUse",
          "description": "Change of use",
          "type": "string"
        },
        {
          "const": "changeOfUseFrom",
          "description": "Change of use of an existing single home",
          "type": "string"
        },
        {
          "const": "changeOfUseTo",
          "description": "Change of use to a home",
          "type": "string"
        },
        {
          "const": "conversion",
          "description": "Conversion",
          "type": "string"
        },
        {
          "const": "extension",
          "description": "Extension",
          "type": "string"
        },
        {
          "const": "newBuild",
          "description": "New build",
          "type": "string"
        },
        {
          "const": "notKnown",
          "description": "Not known",
          "type": "string"
        }
      ],
      "description": "Development types"
    },
    "Email": {
      "format": "email",
      "type": "string"
    },
    "EnglandProperty": {
      "additionalProperties": false,
      "description": "Property details for sites anywhere in England",
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/definitions/ProposedAddress"
            },
            {
              "$ref": "#/definitions/OSAddress"
            }
          ]
        },
        "boundary": {
          "$ref": "#/definitions/GeoBoundary",
          "description": "HM Land Registry Index polygon for this property, commonly referred to as the blue-line or title boundary, sourced from planning.data.gov.uk/dataset/title-boundary"
        },
        "localAuthorityDistrict": {
          "description": "Current and historic England Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "planning": {
          "additionalProperties": false,
          "description": "Planning constraints and policies that intersect with this site and may impact or restrict development",
          "properties": {
            "conditions": {
              "items": {
                "$ref": "#/definitions/PlanningConstraint"
              },
              "type": "array"
            },
            "designations": {
              "items": {
                "$ref": "#/definitions/PlanningDesignation"
              },
              "type": "array"
            },
            "guidance": {
              "items": {
                "$ref": "#/definitions/PlanningConstraint"
              },
              "type": "array"
            },
            "plans": {
              "additionalProperties": false,
              "properties": {
                "local": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "neighbourhood": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                }
              },
              "required": [
                "local",
                "neighbourhood"
              ],
              "type": "object"
            },
            "sources": {
              "description": "A list of open data requests or websites that explain how these constraints were sourced",
              "items": {
                "$ref": "#/definitions/URL"
              },
              "type": "array"
            }
          },
          "required": [
            "sources"
          ],
          "type": "object"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "type": {
          "$ref": "#/definitions/PropertyType"
        }
      },
      "required": [
        "address",
        "region",
        "localAuthorityDistrict",
        "type"
      ],
      "type": "object"
    },
    "EnglandProposal": {
      "additionalProperties": false,
      "properties": {
        "access": {
          "additionalProperties": false,
          "properties": {
            "affected": {
              "enum": [
                "vehicle",
                "pedestrian",
                "newRoad",
                "rightsOfWay.newPublic",
                "rightsOfWay.changes"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "boundary": {
          "$ref": "#/definitions/GeoBoundaryPrototype",
          "description": "Location plan boundary proposed by the user, commonly referred to as the red line boundary"
        },
        "date": {
          "$ref": "#/definitions/ProposalDates"
        },
        "description": {
          "type": "string"
        },
        "ecology": {
          "additionalProperties": false,
          "description": "Details of biodiversity and geological conservation, if applicable to application.type",
          "properties": {
            "conservationAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            },
            "featuresAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            },
            "speciesAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "environmentalImpactDescription": {
          "type": "string"
        },
        "extend": {
          "additionalProperties": false,
          "properties": {
            "area": {
              "$ref": "#/definitions/Area"
            }
          },
          "required": [
            "area"
          ],
          "type": "object"
        },
        "flood": {
          "additionalProperties": false,
          "description": "Assessment of flood risk, if applicable to application.type",
          "properties": {
            "surfaceWaterDisposal": {
              "enum": [
                "drainageSystem",
                "soakaway",
                "sewer",
                "watercourse",
                "pondOrLake",
                "other"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "materials": {
          "$ref": "#/definitions/Materials",
          "description": "Proposed materials, if applicable to projectType"
        },
        "new": {
          "additionalProperties": false,
          "properties": {
            "area": {
              "$ref": "#/definitions/Area"
            },
            "count": {
              "additionalProperties": false,
              "properties": {
                "bathrooms": {
                  "$ref": "#/definitions/Integer"
                },
                "bedrooms": {
                  "$ref": "#/definitions/Integer"
                },
                "dwellings": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "area"
          ],
          "type": "object"
        },
        "newDwellings": {
          "additionalProperties": false,
          "properties": {
            "newBuild": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "projectType": {
          "items": {
            "$ref": "#/definitions/ProjectType"
          },
          "type": "array"
        },
        "structures": {
          "additionalProperties": false,
          "properties": {
            "permanent": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "temporary": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "total": {
              "$ref": "#/definitions/Integer"
            },
            "type": {
              "enum": [
                "bridge",
                "catchpit",
                "culvert",
                "pipe",
                "gully",
                "headwall",
                "manhole",
                "weir",
                "other"
              ],
              "type": "string"
            }
          },
          "required": [
            "type",
            "total"
          ],
          "type": "object"
        },
        "units": {
          "$ref": "#/definitions/ResidentialUnits"
        },
        "use": {
          "additionalProperties": false,
          "description": "Proposed land use, including storage of hazardous materials, if applicable to application.type",
          "properties": {
            "contamination": {
              "enum": [
                "known",
                "suspected",
                "vulnerable"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "storage": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "utilities": {
          "additionalProperties": false,
          "description": "Proposed utilities, if applicable to application.type",
          "properties": {
            "fire": {
              "additionalProperties": false,
              "description": "Whether the proposal introduces a fire suppression system",
              "properties": {
                "suppression": {
                  "type": "boolean"
                }
              },
              "required": [
                "suppression"
              ],
              "type": "object"
            },
            "foulSewageDisposal": {
              "description": "Type of proposed foul sewage disposal",
              "enum": [
                "sewer",
                "tank",
                "plant",
                "pit",
                "other"
              ],
              "type": "string"
            },
            "gas": {
              "additionalProperties": false,
              "description": "Count of new gas connections",
              "properties": {
                "connections": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "connections"
              ],
              "type": "object"
            },
            "internet": {
              "additionalProperties": false,
              "description": "Count of new full fibre Internet connections",
              "properties": {
                "commercialUnits": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "residentialUnits": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "commercialUnits",
                "residentialUnits"
              ],
              "type": "object"
            },
            "water": {
              "additionalProperties": false,
              "description": "Count of new water connections",
              "properties": {
                "connections": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "connections"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "watercourse": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "enum": [
                "ditch",
                "millStream",
                "pond",
                "river",
                "streamOrBrook",
                "other"
              ],
              "type": "string"
            }
          },
          "required": [
            "name",
            "type"
          ],
          "type": "object"
        }
      },
      "required": [
        "projectType",
        "description"
      ],
      "type": "object"
    },
    "Entity": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "source": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "const": "Planning Data",
                  "type": "string"
                },
                "url": {
                  "$ref": "#/definitions/URL"
                }
              },
              "required": [
                "text",
                "url"
              ],
              "type": "object"
            },
            {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "const": "Ordnance Survey MasterMap Highways",
                  "type": "string"
                }
              },
              "required": [
                "text"
              ],
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "name",
        "source"
      ],
      "type": "object"
    },
    "Feature": {
      "additionalProperties": false,
      "description": "A feature object which contains a geometry and associated properties. https://tools.ietf.org/html/rfc7946#section-3.2",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "geometry": {
          "$ref": "#/definitions/Geometry",
          "description": "The feature's geometry"
        },
        "id": {
          "description": "A value that uniquely identifies this feature in a https://tools.ietf.org/html/rfc7946#section-3.2.",
          "type": [
            "string",
            "number"
          ]
        },
        "properties": {
          "$ref": "#/definitions/GeoJsonProperties",
          "description": "Properties associated with this feature."
        },
        "type": {
          "const": "Feature",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "geometry",
        "properties",
        "type"
      ],
      "type": "object"
    },
    "Feature<Geometry,GeoJsonProperties>": {
      "additionalProperties": false,
      "description": "A feature object which contains a geometry and associated properties. https://tools.ietf.org/html/rfc7946#section-3.2",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "geometry": {
          "$ref": "#/definitions/Geometry",
          "description": "The feature's geometry"
        },
        "id": {
          "description": "A value that uniquely identifies this feature in a https://tools.ietf.org/html/rfc7946#section-3.2.",
          "type": [
            "string",
            "number"
          ]
        },
        "properties": {
          "$ref": "#/definitions/GeoJsonProperties",
          "description": "Properties associated with this feature."
        },
        "type": {
          "const": "Feature",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "geometry",
        "properties",
        "type"
      ],
      "type": "object"
    },
    "FeatureCollection": {
      "additionalProperties": false,
      "description": "A collection of feature objects.  https://tools.ietf.org/html/rfc7946#section-3.3",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "features": {
          "items": {
            "$ref": "#/definitions/Feature%3CGeometry%2CGeoJsonProperties%3E"
          },
          "type": "array"
        },
        "type": {
          "const": "FeatureCollection",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "features",
        "type"
      ],
      "type": "object"
    },
    "FeeCarryingApplicationData": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFee"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFee"
            },
            "leadDeveloper": {
              "$ref": "#/definitions/LeadDeveloper"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            },
            "vacantBuildingCredit": {
              "type": "boolean"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        }
      ],
      "description": "ApplicationData required for fee carrying application types"
    },
    "FeeExplanation": {
      "$id": "#FeeExplanation",
      "additionalProperties": false,
      "description": "An explanation, including policy references, of the fees associated with this application",
      "properties": {
        "calculated": {
          "items": {
            "$ref": "#/definitions/CalculateMetadata"
          },
          "type": "array"
        },
        "category": {
          "additionalProperties": false,
          "description": "Breakdown of calculated fee by category of development, based on the scales defined in The Town and Country Planning Regulations https://www.legislation.gov.uk/uksi/2012/2920/schedule/1/part/2",
          "properties": {
            "eight": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "eleven": {
              "additionalProperties": false,
              "properties": {
                "one": {
                  "items": {
                    "$ref": "#/definitions/CalculateMetadata"
                  },
                  "type": "array"
                }
              },
              "required": [
                "one"
              ],
              "type": "object"
            },
            "five": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "four": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "fourteen": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "nine": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "one": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "sixAndSeven": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "ten": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "thirteen": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "three": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            },
            "twelve": {
              "additionalProperties": false,
              "properties": {
                "one": {
                  "items": {
                    "$ref": "#/definitions/CalculateMetadata"
                  },
                  "type": "array"
                },
                "two": {
                  "items": {
                    "$ref": "#/definitions/CalculateMetadata"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "two": {
              "items": {
                "$ref": "#/definitions/CalculateMetadata"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "payable": {
          "items": {
            "$ref": "#/definitions/CalculateMetadata"
          },
          "type": "array"
        }
      },
      "required": [
        "calculated",
        "payable"
      ],
      "type": "object"
    },
    "FeeExplanationNotApplicable": {
      "$id": "#FeeExplanationNotApplicable",
      "additionalProperties": false,
      "description": "An indicator that an application fee does not apply to this application type or journey, therefore there is not an explanation of how it was calculated",
      "properties": {
        "notApplicable": {
          "const": true,
          "type": "boolean"
        }
      },
      "required": [
        "notApplicable"
      ],
      "type": "object"
    },
    "File": {
      "$id": "#File",
      "additionalProperties": false,
      "description": "File uploaded and labeled by the user to support the application",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "items": {
            "$ref": "#/definitions/PrototypeFileType"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "GLAHousingProvider": {
      "$id": "#GLAHousingProvider",
      "anyOf": [
        {
          "const": "affordableHousing",
          "description": "Other affordable housing provider",
          "type": "string"
        },
        {
          "const": "councilBuildToRent",
          "description": "Council delivered build to rent",
          "type": "string"
        },
        {
          "const": "councilDelivery",
          "description": "Council delivery company",
          "type": "string"
        },
        {
          "const": "HA",
          "description": "Housing association",
          "type": "string"
        },
        {
          "const": "LA",
          "description": "Local Authority",
          "type": "string"
        },
        {
          "const": "private",
          "description": "Private",
          "type": "string"
        },
        {
          "const": "privateRented",
          "description": "Private rented sector",
          "type": "string"
        },
        {
          "const": "publicAuthority",
          "description": "Other public authority",
          "type": "string"
        },
        {
          "const": "selfBuild",
          "description": "Self-build",
          "type": "string"
        }
      ],
      "description": "Housing provider categories tracked by the Greater London Authority (GLA)"
    },
    "GLAResidentialUnitType": {
      "$id": "#GLAResidentialUnitType",
      "anyOf": [
        {
          "const": "cluster",
          "description": "Cluster flat",
          "type": "string"
        },
        {
          "const": "coLiving",
          "description": "Co-living unit",
          "type": "string"
        },
        {
          "const": "detached",
          "description": "Detached home",
          "type": "string"
        },
        {
          "const": "flat",
          "description": "Flat",
          "type": "string"
        },
        {
          "const": "HMO",
          "description": "House in multiple occupation (HMO)",
          "type": "string"
        },
        {
          "const": "hostel",
          "description": "Hostel room",
          "type": "string"
        },
        {
          "const": "LW",
          "description": "Live/work unit",
          "type": "string"
        },
        {
          "const": "other",
          "description": "Other",
          "type": "string"
        },
        {
          "const": "semiDetached",
          "description": "Semi-detached home",
          "type": "string"
        },
        {
          "const": "student",
          "description": "Student accommodation",
          "type": "string"
        },
        {
          "const": "studio",
          "description": "Studio or bedsit",
          "type": "string"
        },
        {
          "const": "terraced",
          "description": "Terraced home",
          "type": "string"
        }
      ],
      "description": "Residential unit types tracked by the Greater London Authority (GLA)"
    },
    "GLATenureType": {
      "$id": "#GLATenureType",
      "anyOf": [
        {
          "const": "AR",
          "description": "Affordable rent (not at LAR benchmark rents)",
          "type": "string"
        },
        {
          "const": "DMR",
          "description": "Discount market rate",
          "type": "string"
        },
        {
          "const": "DMRLLR",
          "description": "Discount market rate (charged at London Living Rents)",
          "type": "string"
        },
        {
          "const": "DMS",
          "description": "Discount market sale",
          "type": "string"
        },
        {
          "const": "LAR",
          "description": "London Affordable Rent",
          "type": "string"
        },
        {
          "const": "LRR",
          "description": "London Living Rent",
          "type": "string"
        },
        {
          "const": "LSO",
          "description": "London Shared Ownership",
          "type": "string"
        },
        {
          "const": "marketForRent",
          "description": "Market for rent",
          "type": "string"
        },
        {
          "const": "marketForSale",
          "description": "Market for sale",
          "type": "string"
        },
        {
          "const": "sharedEquity",
          "description": "Shared equity",
          "type": "string"
        },
        {
          "const": "SR",
          "description": "Social rent",
          "type": "string"
        }
      ],
      "description": "Tenure types tracked by the Greater London Authority (GLA)"
    },
    "GeoBoundary": {
      "additionalProperties": false,
      "properties": {
        "area": {
          "$ref": "#/definitions/Area"
        },
        "site": {
          "$ref": "#/definitions/GeoJSON"
        }
      },
      "required": [
        "site",
        "area"
      ],
      "type": "object"
    },
    "GeoBoundaryPrototype": {
      "additionalProperties": false,
      "properties": {
        "area": {
          "$ref": "#/definitions/Area"
        },
        "site": {
          "$ref": "#/definitions/GeoJSON"
        }
      },
      "required": [
        "site",
        "area"
      ],
      "type": "object"
    },
    "GeoJSON": {
      "anyOf": [
        {
          "$ref": "#/definitions/Geometry"
        },
        {
          "$ref": "#/definitions/Feature"
        },
        {
          "$ref": "#/definitions/FeatureCollection"
        }
      ],
      "description": "Union of GeoJSON objects."
    },
    "GeoJsonProperties": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "null"
        }
      ]
    },
    "Geometry": {
      "anyOf": [
        {
          "$ref": "#/definitions/Point"
        },
        {
          "$ref": "#/definitions/MultiPoint"
        },
        {
          "$ref": "#/definitions/LineString"
        },
        {
          "$ref": "#/definitions/MultiLineString"
        },
        {
          "$ref": "#/definitions/Polygon"
        },
        {
          "$ref": "#/definitions/MultiPolygon"
        },
        {
          "$ref": "#/definitions/GeometryCollection"
        }
      ],
      "description": "Geometry object. https://tools.ietf.org/html/rfc7946#section-3"
    },
    "GeometryCollection": {
      "additionalProperties": false,
      "description": "Geometry Collection https://tools.ietf.org/html/rfc7946#section-3.1.8",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "geometries": {
          "items": {
            "$ref": "#/definitions/Geometry"
          },
          "type": "array"
        },
        "type": {
          "const": "GeometryCollection",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "geometries",
        "type"
      ],
      "type": "object"
    },
    "Integer": {
      "format": "integer",
      "type": "number"
    },
    "LDC": {
      "additionalProperties": false,
      "properties": {
        "applicationType": {
          "$ref": "#/definitions/LDCApplicationType"
        },
        "data": {
          "additionalProperties": false,
          "properties": {
            "applicant": {
              "$ref": "#/definitions/LDCApplicant"
            },
            "application": {
              "$ref": "#/definitions/FeeCarryingApplicationData"
            },
            "property": {
              "$ref": "#/definitions/PropertyBase"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalBase"
            },
            "user": {
              "$ref": "#/definitions/UserBase"
            }
          },
          "required": [
            "user",
            "applicant",
            "application",
            "property",
            "proposal"
          ],
          "type": "object"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/PrototypePlanXMetadata"
        },
        "preAssessment": {
          "$ref": "#/definitions/PreAssessment"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "required": [
        "applicationType",
        "data",
        "responses",
        "files",
        "metadata"
      ],
      "type": "object"
    },
    "LDCApplicant": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "interest": {
                      "const": "owner",
                      "type": "string"
                    }
                  },
                  "required": [
                    "interest"
                  ],
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "interest": {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    "owners": {
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/OwnersNoticeGiven"
                          },
                          {
                            "$ref": "#/definitions/OwnersNoNoticeGiven"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "interest",
                    "owners"
                  ],
                  "type": "object"
                }
              ],
              "description": "Information about the property owners, if different than the applicant"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "agent": {
              "additionalProperties": false,
              "description": "Contact information for the agent or proxy",
              "properties": {
                "address": {
                  "$ref": "#/definitions/UserAddress"
                },
                "company": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "email": {
                  "$ref": "#/definitions/Email"
                },
                "name": {
                  "additionalProperties": false,
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "first",
                    "last"
                  ],
                  "type": "object"
                },
                "phone": {
                  "additionalProperties": false,
                  "properties": {
                    "primary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "primary"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "address",
                "email",
                "name",
                "phone"
              ],
              "type": "object"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "interest": {
                      "const": "owner",
                      "type": "string"
                    }
                  },
                  "required": [
                    "interest"
                  ],
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "interest": {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    "owners": {
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/OwnersNoticeGiven"
                          },
                          {
                            "$ref": "#/definitions/OwnersNoNoticeGiven"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "interest",
                    "owners"
                  ],
                  "type": "object"
                }
              ],
              "description": "Information about the property owners, if different than the applicant"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "agent",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "LDCApplicationType": {
      "anyOf": [
        {
          "const": "ldc",
          "description": "Lawful Development Certificate",
          "type": "string"
        },
        {
          "const": "ldc.breachOfCondition",
          "description": "Lawful Development Certificate - Existing use lawful not to comply with a condition (S191C)",
          "type": "string"
        },
        {
          "const": "ldc.existing",
          "description": "Lawful Development Certificate - Existing use",
          "type": "string"
        },
        {
          "const": "ldc.listedBuildingWorks",
          "description": "Lawful Development Certificate - Works to a Listed Building (S26H)",
          "type": "string"
        },
        {
          "const": "ldc.proposed",
          "description": "Lawful Development Certificate - Proposed use",
          "type": "string"
        }
      ]
    },
    "LandDrainageConsent": {
      "additionalProperties": false,
      "properties": {
        "applicationType": {
          "$ref": "#/definitions/LandDrainageConsentApplicationType"
        },
        "data": {
          "additionalProperties": false,
          "properties": {
            "applicant": {
              "$ref": "#/definitions/LandDrainageConsentApplicant"
            },
            "application": {
              "$ref": "#/definitions/FeeCarryingApplicationData"
            },
            "property": {
              "$ref": "#/definitions/PropertyBase"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalBase"
            },
            "user": {
              "$ref": "#/definitions/UserBase"
            }
          },
          "required": [
            "user",
            "applicant",
            "application",
            "property",
            "proposal"
          ],
          "type": "object"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/PrototypePlanXMetadata"
        },
        "preAssessment": {
          "$ref": "#/definitions/PreAssessment"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "required": [
        "applicationType",
        "data",
        "responses",
        "files",
        "metadata"
      ],
      "type": "object"
    },
    "LandDrainageConsentApplicant": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "maintenanceContact": {
              "$ref": "#/definitions/MaintenanceContacts",
              "description": "Contact information for the person(s) responsible for maintenace while the works are carried out"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "additionalProperties": false,
              "properties": {
                "interest": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    {
                      "const": "owner.sole",
                      "type": "string"
                    },
                    {
                      "const": "owner.co",
                      "type": "string"
                    }
                  ]
                }
              },
              "required": [
                "interest"
              ],
              "type": "object"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "agent": {
              "additionalProperties": false,
              "description": "Contact information for the agent or proxy",
              "properties": {
                "address": {
                  "$ref": "#/definitions/UserAddress"
                },
                "company": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "email": {
                  "$ref": "#/definitions/Email"
                },
                "name": {
                  "additionalProperties": false,
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "first",
                    "last"
                  ],
                  "type": "object"
                },
                "phone": {
                  "additionalProperties": false,
                  "properties": {
                    "primary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "primary"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "address",
                "email",
                "name",
                "phone"
              ],
              "type": "object"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "maintenanceContact": {
              "$ref": "#/definitions/MaintenanceContacts",
              "description": "Contact information for the person(s) responsible for maintenace while the works are carried out"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "additionalProperties": false,
              "properties": {
                "interest": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    {
                      "const": "owner.sole",
                      "type": "string"
                    },
                    {
                      "const": "owner.co",
                      "type": "string"
                    }
                  ]
                }
              },
              "required": [
                "interest"
              ],
              "type": "object"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "agent",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "LandDrainageConsentApplicationType": {
      "const": "landDrainageConsent",
      "description": "Consent to do works affecting ordinary watercourses or land drainage",
      "type": "string"
    },
    "LeadDeveloper": {
      "additionalProperties": false,
      "properties": {
        "company": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "registrationNumber": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "registrationNumber"
          ],
          "type": "object"
        },
        "type": {
          "enum": [
            "ukCompany",
            "overseasCompany",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "LineString": {
      "additionalProperties": false,
      "description": "LineString geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.4",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "items": {
            "$ref": "#/definitions/Position"
          },
          "type": "array"
        },
        "type": {
          "const": "LineString",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "Listed": {
      "additionalProperties": false,
      "properties": {
        "applicationType": {
          "$ref": "#/definitions/ListedApplicationType"
        },
        "data": {
          "additionalProperties": false,
          "properties": {
            "applicant": {
              "$ref": "#/definitions/PPApplicant"
            },
            "application": {
              "$ref": "#/definitions/NonFeeCarryingApplicationData"
            },
            "property": {
              "$ref": "#/definitions/PropertyBase"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalBase"
            },
            "user": {
              "$ref": "#/definitions/UserBase"
            }
          },
          "required": [
            "user",
            "applicant",
            "application",
            "property",
            "proposal"
          ],
          "type": "object"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/PrototypePlanXMetadata"
        },
        "preAssessment": {
          "$ref": "#/definitions/PreAssessment"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "required": [
        "applicationType",
        "data",
        "responses",
        "files",
        "metadata"
      ],
      "type": "object"
    },
    "ListedApplicationType": {
      "const": "listed",
      "description": "Consent to do works to a Listed Building",
      "type": "string"
    },
    "LondonProperty": {
      "additionalProperties": false,
      "description": "Property details for sites within the Greater London Authority (GLA) area",
      "properties": {
        "EPC": {
          "additionalProperties": false,
          "properties": {
            "known": {
              "enum": [
                "Yes",
                "Yes, but only some of the properties have one",
                "The property does not have one",
                "No"
              ],
              "type": "string"
            },
            "number": {
              "type": "string"
            }
          },
          "required": [
            "known"
          ],
          "title": "Energy Performance Certificate",
          "type": "object"
        },
        "address": {
          "anyOf": [
            {
              "$ref": "#/definitions/ProposedAddress"
            },
            {
              "$ref": "#/definitions/OSAddress"
            }
          ]
        },
        "boundary": {
          "$ref": "#/definitions/GeoBoundary",
          "description": "HM Land Registry Index polygon for this property, commonly referred to as the blue-line or title boundary, sourced from planning.data.gov.uk/dataset/title-boundary"
        },
        "localAuthorityDistrict": {
          "description": "Current and historic England Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parking": {
          "additionalProperties": false,
          "properties": {
            "buses": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "carClub": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "cars": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "cycles": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "disabled": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "motorcycles": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "offStreet": {
              "additionalProperties": false,
              "properties": {
                "residential": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "residential"
              ],
              "type": "object"
            },
            "other": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "vans": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "planning": {
          "additionalProperties": false,
          "description": "Planning constraints and policies that intersect with this site and may impact or restrict development",
          "properties": {
            "conditions": {
              "items": {
                "$ref": "#/definitions/PlanningConstraint"
              },
              "type": "array"
            },
            "designations": {
              "items": {
                "$ref": "#/definitions/PlanningDesignation"
              },
              "type": "array"
            },
            "guidance": {
              "items": {
                "$ref": "#/definitions/PlanningConstraint"
              },
              "type": "array"
            },
            "plans": {
              "additionalProperties": false,
              "properties": {
                "local": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "neighbourhood": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                }
              },
              "required": [
                "local",
                "neighbourhood"
              ],
              "type": "object"
            },
            "sources": {
              "description": "A list of open data requests or websites that explain how these constraints were sourced",
              "items": {
                "$ref": "#/definitions/URL"
              },
              "type": "array"
            }
          },
          "required": [
            "sources"
          ],
          "type": "object"
        },
        "region": {
          "const": "London",
          "type": "string"
        },
        "titleNumber": {
          "additionalProperties": false,
          "properties": {
            "known": {
              "enum": [
                "Yes",
                "No"
              ],
              "type": "string"
            },
            "number": {
              "type": "string"
            }
          },
          "required": [
            "known"
          ],
          "type": "object"
        },
        "type": {
          "$ref": "#/definitions/PropertyType"
        }
      },
      "required": [
        "address",
        "localAuthorityDistrict",
        "region",
        "type"
      ],
      "type": "object"
    },
    "LondonProposal": {
      "additionalProperties": false,
      "description": "Proposal details for project sites within the Greater London Authority (GLA) area",
      "properties": {
        "access": {
          "additionalProperties": false,
          "properties": {
            "affected": {
              "enum": [
                "vehicle",
                "pedestrian",
                "newRoad",
                "rightsOfWay.newPublic",
                "rightsOfWay.changes"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "boundary": {
          "$ref": "#/definitions/GeoBoundaryPrototype",
          "description": "Location plan boundary proposed by the user, commonly referred to as the red line boundary"
        },
        "charging": {
          "additionalProperties": false,
          "description": "Electric vehicle charing points",
          "properties": {
            "active": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "passive": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "cost": {
          "additionalProperties": false,
          "description": "Project cost in GBP",
          "properties": {
            "projected": {
              "enum": [
                "2m",
                "2mTo100m",
                "100m"
              ],
              "type": "string"
            }
          },
          "required": [
            "projected"
          ],
          "type": "object"
        },
        "date": {
          "$ref": "#/definitions/ProposalDates"
        },
        "description": {
          "type": "string"
        },
        "ecology": {
          "additionalProperties": false,
          "description": "Details of biodiversity and geological conservation, if applicable to application.type",
          "properties": {
            "conservationAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            },
            "featuresAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            },
            "speciesAffected": {
              "enum": [
                "site",
                "adjacent",
                "none"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "energy": {
          "additionalProperties": false,
          "description": "Proposed energy sources",
          "properties": {
            "communityOwned": {
              "additionalProperties": false,
              "properties": {
                "capacity": {
                  "additionalProperties": false,
                  "description": "Proposed total capacity of any on-site community-owned energy generation in megawatts (mW)",
                  "properties": {
                    "megawatts": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "megawatts"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "capacity"
              ],
              "type": "object"
            },
            "heatPumps": {
              "additionalProperties": false,
              "properties": {
                "capacity": {
                  "additionalProperties": false,
                  "description": "Proposed total capacity of any heat pumps in megawatts (mV)",
                  "properties": {
                    "megawatts": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "megawatts"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "capacity"
              ],
              "type": "object"
            },
            "solar": {
              "additionalProperties": false,
              "properties": {
                "capacity": {
                  "additionalProperties": false,
                  "description": "Proposed total capacity of any solar energy generation in megawatts (mV)",
                  "properties": {
                    "megawatts": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "megawatts"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "capacity"
              ],
              "type": "object"
            },
            "type": {
              "items": {
                "enum": [
                  "communityOwned",
                  "heatPump",
                  "solar"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        "environmentalImpactDescription": {
          "type": "string"
        },
        "extend": {
          "additionalProperties": false,
          "properties": {
            "area": {
              "$ref": "#/definitions/Area"
            }
          },
          "required": [
            "area"
          ],
          "type": "object"
        },
        "flood": {
          "additionalProperties": false,
          "description": "Assessment of flood risk, if applicable to application.type",
          "properties": {
            "surfaceWaterDisposal": {
              "enum": [
                "drainageSystem",
                "soakaway",
                "sewer",
                "watercourse",
                "pondOrLake",
                "other"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "greenRoof": {
          "additionalProperties": false,
          "description": "Green roof",
          "properties": {
            "area": {
              "$ref": "#/definitions/Area"
            }
          },
          "required": [
            "area"
          ],
          "type": "object"
        },
        "materials": {
          "$ref": "#/definitions/Materials",
          "description": "Proposed materials, if applicable to projectType"
        },
        "nature": {
          "additionalProperties": false,
          "description": "Changes that result in the loss, gain, or change of use of natural spaces",
          "properties": {
            "openSpaces": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "access": {
                    "enum": [
                      "restricted",
                      "unrestricted"
                    ],
                    "type": "string"
                  },
                  "area": {
                    "additionalProperties": false,
                    "properties": {
                      "hectares": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "hectares"
                    ],
                    "type": "object"
                  },
                  "description": {
                    "type": "string"
                  },
                  "designation": {
                    "$ref": "#/definitions/OpenSpaceDesignation"
                  },
                  "impact": {
                    "enum": [
                      "loss",
                      "gain",
                      "change"
                    ],
                    "type": "string"
                  },
                  "swap": {
                    "description": "Whether the open space change involves a land swap",
                    "type": "boolean"
                  },
                  "type": {
                    "$ref": "#/definitions/OpenSpaceType"
                  }
                },
                "required": [
                  "impact",
                  "description",
                  "type",
                  "designation",
                  "access",
                  "area",
                  "swap"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "protectedSpaces": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "access": {
                    "enum": [
                      "restricted",
                      "unrestricted"
                    ],
                    "type": "string"
                  },
                  "area": {
                    "additionalProperties": false,
                    "properties": {
                      "hectares": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "hectares"
                    ],
                    "type": "object"
                  },
                  "description": {
                    "type": "string"
                  },
                  "designation": {
                    "$ref": "#/definitions/ProtectedSpaceDesignation"
                  },
                  "impact": {
                    "enum": [
                      "loss",
                      "gain",
                      "change"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "impact",
                  "description",
                  "designation",
                  "access",
                  "area"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "new": {
          "additionalProperties": false,
          "properties": {
            "area": {
              "$ref": "#/definitions/Area"
            },
            "count": {
              "additionalProperties": false,
              "properties": {
                "bathrooms": {
                  "$ref": "#/definitions/Integer"
                },
                "bedrooms": {
                  "$ref": "#/definitions/Integer"
                },
                "dwellings": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "area"
          ],
          "type": "object"
        },
        "newBuildings": {
          "$ref": "#/definitions/NewBuildingsOrStoreys",
          "description": "Creating new buildings"
        },
        "newDwellings": {
          "additionalProperties": false,
          "properties": {
            "newBuild": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "newStoreys": {
          "$ref": "#/definitions/NewBuildingsOrStoreys",
          "description": "Increasing the height of existing buildings"
        },
        "parking": {
          "additionalProperties": false,
          "description": "Proposed parking spaces",
          "properties": {
            "buses": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "carClub": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "cars": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "cycles": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "disabled": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "motorcycles": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "offStreet": {
              "additionalProperties": false,
              "properties": {
                "residential": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "difference": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count",
                    "difference"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "residential"
              ],
              "type": "object"
            },
            "other": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            },
            "vans": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "type": "number"
                },
                "difference": {
                  "type": "number"
                }
              },
              "required": [
                "count",
                "difference"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "projectType": {
          "items": {
            "$ref": "#/definitions/ProjectType"
          },
          "type": "array"
        },
        "schemeName": {
          "type": "string"
        },
        "structures": {
          "additionalProperties": false,
          "properties": {
            "permanent": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "temporary": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/Integer"
                }
              },
              "required": [
                "count"
              ],
              "type": "object"
            },
            "total": {
              "$ref": "#/definitions/Integer"
            },
            "type": {
              "enum": [
                "bridge",
                "catchpit",
                "culvert",
                "pipe",
                "gully",
                "headwall",
                "manhole",
                "weir",
                "other"
              ],
              "type": "string"
            }
          },
          "required": [
            "type",
            "total"
          ],
          "type": "object"
        },
        "units": {
          "additionalProperties": false,
          "properties": {
            "residential": {
              "additionalProperties": false,
              "properties": {
                "new": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "area": {
                        "$ref": "#/definitions/Area"
                      },
                      "bedrooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "compliance": {
                        "items": {
                          "$ref": "#/definitions/BuildingRegulation"
                        },
                        "type": "array"
                      },
                      "development": {
                        "$ref": "#/definitions/DevelopmentType"
                      },
                      "garden": {
                        "type": "boolean"
                      },
                      "habitableRooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "identicalUnits": {
                        "$ref": "#/definitions/Integer"
                      },
                      "olderPersons": {
                        "type": "boolean"
                      },
                      "provider": {
                        "$ref": "#/definitions/GLAHousingProvider"
                      },
                      "sheltered": {
                        "type": "boolean"
                      },
                      "tenure": {
                        "$ref": "#/definitions/GLATenureType"
                      },
                      "type": {
                        "$ref": "#/definitions/GLAResidentialUnitType"
                      }
                    },
                    "required": [
                      "area",
                      "bedrooms",
                      "compliance",
                      "development",
                      "garden",
                      "habitableRooms",
                      "identicalUnits",
                      "olderPersons",
                      "provider",
                      "sheltered",
                      "tenure",
                      "type"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "rebuilt": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "area": {
                        "$ref": "#/definitions/Area"
                      },
                      "bedrooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "compliance": {
                        "items": {
                          "$ref": "#/definitions/BuildingRegulation"
                        },
                        "type": "array"
                      },
                      "development": {
                        "$ref": "#/definitions/DevelopmentType"
                      },
                      "garden": {
                        "type": "boolean"
                      },
                      "habitableRooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "identicalUnits": {
                        "$ref": "#/definitions/Integer"
                      },
                      "olderPersons": {
                        "type": "boolean"
                      },
                      "provider": {
                        "$ref": "#/definitions/GLAHousingProvider"
                      },
                      "sheltered": {
                        "type": "boolean"
                      },
                      "tenure": {
                        "$ref": "#/definitions/GLATenureType"
                      },
                      "type": {
                        "$ref": "#/definitions/GLAResidentialUnitType"
                      }
                    },
                    "required": [
                      "area",
                      "bedrooms",
                      "compliance",
                      "development",
                      "garden",
                      "habitableRooms",
                      "identicalUnits",
                      "olderPersons",
                      "provider",
                      "sheltered",
                      "tenure",
                      "type"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "removed": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "area": {
                        "$ref": "#/definitions/Area"
                      },
                      "bedrooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "compliance": {
                        "items": {
                          "$ref": "#/definitions/BuildingRegulation"
                        },
                        "type": "array"
                      },
                      "habitableRooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "identicalUnits": {
                        "$ref": "#/definitions/Integer"
                      },
                      "olderPersons": {
                        "type": "boolean"
                      },
                      "provider": {
                        "$ref": "#/definitions/GLAHousingProvider"
                      },
                      "sheltered": {
                        "type": "boolean"
                      },
                      "tenure": {
                        "$ref": "#/definitions/GLATenureType"
                      },
                      "type": {
                        "$ref": "#/definitions/GLAResidentialUnitType"
                      }
                    },
                    "required": [
                      "area",
                      "bedrooms",
                      "compliance",
                      "habitableRooms",
                      "identicalUnits",
                      "olderPersons",
                      "provider",
                      "sheltered",
                      "tenure",
                      "type"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "retained": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "bedrooms": {
                        "$ref": "#/definitions/Integer"
                      },
                      "identicalUnits": {
                        "$ref": "#/definitions/Integer"
                      },
                      "tenure": {
                        "$ref": "#/definitions/GLATenureType"
                      },
                      "type": {
                        "$ref": "#/definitions/GLAResidentialUnitType"
                      }
                    },
                    "required": [
                      "bedrooms",
                      "tenure",
                      "type",
                      "identicalUnits"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "residential"
          ],
          "type": "object"
        },
        "urbanGreeningFactor": {
          "additionalProperties": false,
          "description": "Urban Greening Factor Score",
          "properties": {
            "score": {
              "type": "number"
            }
          },
          "required": [
            "score"
          ],
          "type": "object"
        },
        "use": {
          "additionalProperties": false,
          "description": "Proposed land use, including storage of hazardous materials, if applicable to application.type",
          "properties": {
            "contamination": {
              "enum": [
                "known",
                "suspected",
                "vulnerable"
              ],
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "storage": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "utilities": {
          "additionalProperties": false,
          "description": "Proposed utilities, if applicable to application.type",
          "properties": {
            "fire": {
              "additionalProperties": false,
              "description": "Whether the proposal introduces a fire suppression system",
              "properties": {
                "suppression": {
                  "type": "boolean"
                }
              },
              "required": [
                "suppression"
              ],
              "type": "object"
            },
            "foulSewageDisposal": {
              "description": "Type of proposed foul sewage disposal",
              "enum": [
                "sewer",
                "tank",
                "plant",
                "pit",
                "other"
              ],
              "type": "string"
            },
            "gas": {
              "additionalProperties": false,
              "description": "Count of new gas connections",
              "properties": {
                "connections": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "connections"
              ],
              "type": "object"
            },
            "internet": {
              "additionalProperties": false,
              "description": "Count of new full fibre Internet connections",
              "properties": {
                "commercialUnits": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "residentialUnits": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "commercialUnits",
                "residentialUnits"
              ],
              "type": "object"
            },
            "water": {
              "additionalProperties": false,
              "description": "Count of new water connections",
              "properties": {
                "connections": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "$ref": "#/definitions/Integer"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "connections"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "waste": {
          "additionalProperties": false,
          "description": "Waste management of demolition and construction materials",
          "properties": {
            "reuseRecycle": {
              "additionalProperties": false,
              "properties": {
                "percent": {
                  "type": "number"
                }
              },
              "required": [
                "percent"
              ],
              "type": "object"
            }
          },
          "required": [
            "reuseRecycle"
          ],
          "type": "object"
        },
        "water": {
          "additionalProperties": false,
          "description": "Water management",
          "properties": {
            "grey": {
              "description": "Whether the proposal includes grey water re-use",
              "type": "boolean"
            },
            "rain": {
              "description": "Whether the proposal includes rain water harvesting",
              "type": "boolean"
            },
            "usage": {
              "additionalProperties": false,
              "description": "Internal residential water usage",
              "properties": {
                "litresPerPersonPerDay": {
                  "type": "number"
                }
              },
              "required": [
                "litresPerPersonPerDay"
              ],
              "type": "object"
            }
          },
          "required": [
            "usage",
            "rain",
            "grey"
          ],
          "type": "object"
        },
        "watercourse": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "enum": [
                "ditch",
                "millStream",
                "pond",
                "river",
                "streamOrBrook",
                "other"
              ],
              "type": "string"
            }
          },
          "required": [
            "name",
            "type"
          ],
          "type": "object"
        }
      },
      "required": [
        "description",
        "projectType"
      ],
      "type": "object"
    },
    "MaintenanceContacts": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "address": {
            "$ref": "#/definitions/UserAddress"
          },
          "contact": {
            "$ref": "#/definitions/ContactDetails"
          },
          "when": {
            "enum": [
              "duringConstruction",
              "afterConstruction",
              "duringAndAfterConstruction"
            ],
            "type": "string"
          }
        },
        "required": [
          "when",
          "address",
          "contact"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "Materials": {
      "additionalProperties": false,
      "properties": {
        "boundary": {
          "type": "string"
        },
        "door": {
          "type": "string"
        },
        "lighting": {
          "type": "string"
        },
        "other": {
          "type": "string"
        },
        "roof": {
          "type": "string"
        },
        "surface": {
          "type": "string"
        },
        "wall": {
          "type": "string"
        },
        "window": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MultiLineString": {
      "additionalProperties": false,
      "description": "MultiLineString geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.5",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "items": {
            "items": {
              "$ref": "#/definitions/Position"
            },
            "type": "array"
          },
          "type": "array"
        },
        "type": {
          "const": "MultiLineString",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "MultiPoint": {
      "additionalProperties": false,
      "description": "MultiPoint geometry object.  https://tools.ietf.org/html/rfc7946#section-3.1.3",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "items": {
            "$ref": "#/definitions/Position"
          },
          "type": "array"
        },
        "type": {
          "const": "MultiPoint",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "MultiPolygon": {
      "additionalProperties": false,
      "description": "MultiPolygon geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.7",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "items": {
            "items": {
              "items": {
                "$ref": "#/definitions/Position"
              },
              "type": "array"
            },
            "type": "array"
          },
          "type": "array"
        },
        "type": {
          "const": "MultiPolygon",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "NewBuildingsOrStoreys": {
      "additionalProperties": false,
      "description": "Details about creating new buildings or increasing the height of existing buildings",
      "properties": {
        "buildings": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "height": {
                "additionalProperties": false,
                "properties": {
                  "metres": {
                    "type": "number"
                  }
                },
                "required": [
                  "metres"
                ],
                "type": "object"
              },
              "storeys": {
                "$ref": "#/definitions/Integer"
              }
            },
            "required": [
              "height",
              "storeys"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "count": {
          "$ref": "#/definitions/Integer"
        }
      },
      "required": [
        "count"
      ],
      "type": "object"
    },
    "NonFeeCarryingApplicationData": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFeeNotApplicable"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFeeNotApplicable"
            },
            "leadDeveloper": {
              "$ref": "#/definitions/LeadDeveloper"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            },
            "vacantBuildingCredit": {
              "type": "boolean"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        }
      ],
      "description": "ApplicationData required for application types that do not have a fee"
    },
    "OSAddress": {
      "additionalProperties": false,
      "description": "Address information for sites with a known address sourced from Ordnance Survey AddressBase Premium (LPI)",
      "properties": {
        "latitude": {
          "description": "Latitude coordinate in EPSG:4326 (WGS84)",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate in EPSG:4326 (WGS84)",
          "type": "number"
        },
        "organisation": {
          "type": "string"
        },
        "pao": {
          "description": "Combined `PAO_START_NUMBER`, `PAO_START_SUFFIX`, `PAO_TEXT` OS LPI properties",
          "title": "Primary Addressable Object start range and/or building description",
          "type": "string"
        },
        "paoEnd": {
          "description": "Combined `PAO_END_NUMBER`, `PAO_END_SUFFIX` OS LPI properties",
          "title": "Primary Addressable Object (PAO) end range",
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "sao": {
          "description": "Combined `SAO_START_NUMBER`, `SAO_START_SUFFIX`, `SAO_TEXT` OS LPI properties",
          "title": "Secondary Addressable Object (SAO) start range and/or building description",
          "type": "string"
        },
        "saoEnd": {
          "description": "Combined `SAO_END_NUMBER`, `SAO_END_SUFFIX` OS LPI properties",
          "title": "Secondary Addressable Object (SAO) end range",
          "type": "string"
        },
        "singleLine": {
          "type": "string"
        },
        "source": {
          "const": "Ordnance Survey",
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "town": {
          "type": "string"
        },
        "uprn": {
          "maxLength": 12,
          "title": "Unique Property Reference Number",
          "type": "string"
        },
        "usrn": {
          "maxLength": 8,
          "title": "Unique Street Reference Number",
          "type": "string"
        },
        "x": {
          "description": "Easting coordinate in British National Grid (OSGB36)",
          "type": "number"
        },
        "y": {
          "description": "Northing coordinate in British National Grid (OSGB36)",
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude",
        "pao",
        "postcode",
        "singleLine",
        "source",
        "street",
        "title",
        "town",
        "uprn",
        "usrn",
        "x",
        "y"
      ],
      "type": "object"
    },
    "OpenSpaceDesignation": {
      "$id": "#OpenSpaceDesignation",
      "anyOf": [
        {
          "const": "greenBelt",
          "description": "Green Belt",
          "type": "string"
        },
        {
          "const": "local",
          "description": "Local Open Spaces",
          "type": "string"
        },
        {
          "const": "metropolitan",
          "description": "Metropolitan Open Land",
          "type": "string"
        },
        {
          "const": "none",
          "description": "Not designated",
          "type": "string"
        },
        {
          "const": "other",
          "description": "Other designation",
          "type": "string"
        }
      ],
      "description": "Designations of natural open spaces"
    },
    "OpenSpaceType": {
      "$id": "#OpenSpaceType",
      "anyOf": [
        {
          "const": "allotment",
          "description": "Allotments, community gardens and city farms",
          "type": "string"
        },
        {
          "const": "amenity",
          "description": "Amenity",
          "type": "string"
        },
        {
          "const": "brownfield",
          "description": "Brownfield land",
          "type": "string"
        },
        {
          "const": "burial",
          "description": "Cemeteries, churchyards and other burial grounds",
          "type": "string"
        },
        {
          "const": "children",
          "description": "Provision for children and young people",
          "type": "string"
        },
        {
          "const": "civic",
          "description": "Civic spaces",
          "type": "string"
        },
        {
          "const": "fringe",
          "description": "Countryside in urban fringe areas",
          "type": "string"
        },
        {
          "const": "greenCorridor",
          "description": "Green corridors",
          "type": "string"
        },
        {
          "const": "natural",
          "description": "Natural and semi-natural",
          "type": "string"
        },
        {
          "const": "nonResidential",
          "description": "Non-residential institution grounds or gardens",
          "type": "string"
        },
        {
          "const": "park",
          "description": "Parks and gardens",
          "type": "string"
        },
        {
          "const": "residential",
          "description": "Residential gardens",
          "type": "string"
        },
        {
          "const": "sport",
          "description": "Outdoor sports facilities",
          "type": "string"
        }
      ],
      "description": "Types of natural open spaces"
    },
    "OwnersNoNoticeGiven": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/definitions/UserAddress"
            },
            {
              "type": "string"
            }
          ]
        },
        "interest": {
          "$ref": "#/definitions/OwnershipInterest"
        },
        "name": {
          "type": "string"
        },
        "noNoticeReason": {
          "type": "string"
        },
        "noticeGiven": {
          "const": false,
          "type": "boolean"
        }
      },
      "required": [
        "address",
        "name",
        "noNoticeReason",
        "noticeGiven"
      ],
      "type": "object"
    },
    "OwnersNoticeDate": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/definitions/UserAddress"
            },
            {
              "type": "string"
            }
          ]
        },
        "interest": {
          "$ref": "#/definitions/OwnershipInterest"
        },
        "name": {
          "type": "string"
        },
        "noticeDate": {
          "$ref": "#/definitions/Date"
        }
      },
      "required": [
        "address",
        "name",
        "noticeDate"
      ],
      "type": "object"
    },
    "OwnersNoticeGiven": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/definitions/UserAddress"
            },
            {
              "type": "string"
            }
          ]
        },
        "interest": {
          "$ref": "#/definitions/OwnershipInterest"
        },
        "name": {
          "type": "string"
        },
        "noticeGiven": {
          "const": true,
          "type": "boolean"
        }
      },
      "required": [
        "address",
        "name",
        "noticeGiven"
      ],
      "type": "object"
    },
    "OwnershipInterest": {
      "enum": [
        "owner",
        "tenant",
        "occupier",
        "other"
      ],
      "type": "string"
    },
    "PA": {
      "additionalProperties": false,
      "properties": {
        "applicationType": {
          "$ref": "#/definitions/PAApplicationType"
        },
        "data": {
          "additionalProperties": false,
          "properties": {
            "applicant": {
              "$ref": "#/definitions/ApplicantBase"
            },
            "application": {
              "$ref": "#/definitions/FeeCarryingApplicationData"
            },
            "property": {
              "$ref": "#/definitions/PropertyBase"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalBase"
            },
            "user": {
              "$ref": "#/definitions/UserBase"
            }
          },
          "required": [
            "user",
            "applicant",
            "application",
            "property",
            "proposal"
          ],
          "type": "object"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/PrototypePlanXMetadata"
        },
        "preAssessment": {
          "$ref": "#/definitions/PreAssessment"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "required": [
        "applicationType",
        "data",
        "responses",
        "files",
        "metadata"
      ],
      "type": "object"
    },
    "PAApplicationType": {
      "anyOf": [
        {
          "const": "pa",
          "description": "Prior Approval",
          "type": "string"
        },
        {
          "const": "pa.part1.classA",
          "description": "Prior Approval - Larger extension to a house",
          "type": "string"
        },
        {
          "const": "pa.part1.classAA",
          "description": "Prior Approval - Adding storeys to a house",
          "type": "string"
        },
        {
          "const": "pa.part3.classG",
          "description": "Prior Approval - Convert a commercial building to mixed use",
          "type": "string"
        },
        {
          "const": "pa.part3.classM",
          "description": "Prior Approval - Convert a mixed use building into a home",
          "type": "string"
        },
        {
          "const": "pa.part3.classMA",
          "description": "Prior Approval - Convert a commercial building into a home or homes",
          "type": "string"
        },
        {
          "const": "pa.part3.classN",
          "description": "Prior Approval - Convert a casino or amusement arcade into a home or homes",
          "type": "string"
        },
        {
          "const": "pa.part3.classQ",
          "description": "Prior Approval - Convert an agricultural building into a home",
          "type": "string"
        },
        {
          "const": "pa.part3.classR",
          "description": "Prior Approval - Convert an agricultural building to a commercial use",
          "type": "string"
        },
        {
          "const": "pa.part3.classS",
          "description": "Prior Approval - Convert an agricultural building to a school",
          "type": "string"
        },
        {
          "const": "pa.part3.classT",
          "description": "Prior Approval - Convert a commercial building to a school",
          "type": "string"
        },
        {
          "const": "pa.part3.classV",
          "description": "Prior Approval - Changes of use permitted under a permission granted on an application",
          "type": "string"
        },
        {
          "const": "pa.part4.classBB",
          "description": "Prior Approval - Put up a temporary structure",
          "type": "string"
        },
        {
          "const": "pa.part4.classBC",
          "description": "Prior Approval - Develop a temporary campsite",
          "type": "string"
        },
        {
          "const": "pa.part4.classCA",
          "description": "Prior Approval - Put temporary school buildings on vacant commercial land",
          "type": "string"
        },
        {
          "const": "pa.part4.classE",
          "description": "Prior Approval - Use a building or land to shoot a film",
          "type": "string"
        },
        {
          "const": "pa.part6",
          "description": "Prior Approval - Alter or add new buildings to agricultural or forestry sites",
          "type": "string"
        },
        {
          "const": "pa.part6.classA",
          "description": "Prior Approval - Build new agricultural buildings on a unit of 5 hectares or more",
          "type": "string"
        },
        {
          "const": "pa.part6.classB",
          "description": "Prior Approval - Build new agricultural buildings on a unit of less than 5 hectares",
          "type": "string"
        },
        {
          "const": "pa.part6.classE",
          "description": "Prior Approval - Build new forestry buildings",
          "type": "string"
        },
        {
          "const": "pa.part7.classC",
          "description": "Prior Approval - Install click and collect facilities",
          "type": "string"
        },
        {
          "const": "pa.part7.classM",
          "description": "Prior Approval - Extend a school, college, university, prison or hospital",
          "type": "string"
        },
        {
          "const": "pa.part9.classD",
          "description": "Prior Approval - Development of toll facilities",
          "type": "string"
        },
        {
          "const": "pa.part11.classB",
          "description": "Prior Approval - Demolish a building",
          "type": "string"
        },
        {
          "const": "pa.part14.classA",
          "description": "Prior Approval - Install or change solar equipment on domestic premises",
          "type": "string"
        },
        {
          "const": "pa.part14.classB",
          "description": "Prior Approval - Install or change stand-alone solar equipment on domestic premises",
          "type": "string"
        },
        {
          "const": "pa.part14.classJ",
          "description": "Prior Approval - Install or change solar panels",
          "type": "string"
        },
        {
          "const": "pa.part14.classK",
          "description": "Prior Approval - Install or change stand-alone solar equipment on non-domestic premises",
          "type": "string"
        },
        {
          "const": "pa.part14.classOA",
          "description": "Prior Approval - Installation of a solar canopy on non-domestic, off-street parking",
          "type": "string"
        },
        {
          "const": "pa.part16.classA",
          "description": "Prior Approval - Install telecommunications equipment",
          "type": "string"
        },
        {
          "const": "pa.part17",
          "description": "Prior Approval - Coal mining",
          "type": "string"
        },
        {
          "const": "pa.part17.classB",
          "description": "Prior Approval - Other developments ancillary to mining operations",
          "type": "string"
        },
        {
          "const": "pa.part17.classC",
          "description": "Prior Approval - Developments for maintenance or safety",
          "type": "string"
        },
        {
          "const": "pa.part17.classG",
          "description": "Prior Approval - Coal mining development by the Coal Authority for maintenance or safety",
          "type": "string"
        },
        {
          "const": "pa.part18.classA",
          "description": "Prior Approval - Development under private acts or orders",
          "type": "string"
        },
        {
          "const": "pa.part19.classTA",
          "description": "Prior Approval - Development on a closed defence site",
          "type": "string"
        },
        {
          "const": "pa.part20.classA",
          "description": "Prior Approval - Build homes on a detached blocks of flats",
          "type": "string"
        },
        {
          "const": "pa.part20.classAA",
          "description": "Prior Approval - Build homes on a detached commercial building",
          "type": "string"
        },
        {
          "const": "pa.part20.classAB",
          "description": "Prior Approval - Build homes on an adjoining commercial or mixed use building",
          "type": "string"
        },
        {
          "const": "pa.part20.classAC",
          "description": "Prior Approval - Build homes on adjoining houses",
          "type": "string"
        },
        {
          "const": "pa.part20.classAD",
          "description": "Prior Approval - Build homes on detached houses",
          "type": "string"
        },
        {
          "const": "pa.part20.classZA",
          "description": "Prior Approval - Demolish buildings and build homes in their place",
          "type": "string"
        }
      ]
    },
    "PP": {
      "additionalProperties": false,
      "properties": {
        "applicationType": {
          "$ref": "#/definitions/PPApplicationType"
        },
        "data": {
          "additionalProperties": false,
          "properties": {
            "applicant": {
              "$ref": "#/definitions/PPApplicant"
            },
            "application": {
              "$ref": "#/definitions/PPApplicationData"
            },
            "property": {
              "$ref": "#/definitions/PPProperty"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalBase"
            },
            "user": {
              "$ref": "#/definitions/UserBase"
            }
          },
          "required": [
            "user",
            "applicant",
            "application",
            "property",
            "proposal"
          ],
          "type": "object"
        },
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/PrototypePlanXMetadata"
        },
        "preAssessment": {
          "$ref": "#/definitions/PreAssessment"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "required": [
        "applicationType",
        "data",
        "responses",
        "files",
        "metadata"
      ],
      "type": "object"
    },
    "PPApplicant": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "maintenanceContact": {
              "$ref": "#/definitions/MaintenanceContacts",
              "description": "Contact information for the person(s) responsible for maintenace while the works are carried out"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "additionalProperties": false,
              "description": "Information about the ownership certificate and property owners, if different than the applicant",
              "properties": {
                "agriculturalTenants": {
                  "description": "Does the land have any agricultural tenants?",
                  "type": "boolean"
                },
                "certificate": {
                  "enum": [
                    "a",
                    "b",
                    "c",
                    "d"
                  ],
                  "type": "string"
                },
                "declaration": {
                  "additionalProperties": false,
                  "description": "Declaration of the accuracy of the ownership certificate, including reasonable steps taken to find all owners and publish notice",
                  "properties": {
                    "accurate": {
                      "const": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "accurate"
                  ],
                  "type": "object"
                },
                "interest": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    {
                      "const": "owner.sole",
                      "type": "string"
                    },
                    {
                      "const": "owner.co",
                      "type": "string"
                    }
                  ]
                },
                "noticeGiven": {
                  "description": "Has requisite notice been given to all the known owners and agricultural tenants?",
                  "type": "boolean"
                },
                "noticePublished": {
                  "additionalProperties": false,
                  "description": "Has a notice of the application been published in a newspaper circulating in the area where the land is situated?",
                  "properties": {
                    "date": {
                      "$ref": "#/definitions/Date"
                    },
                    "newspaperName": {
                      "type": "string"
                    },
                    "status": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                },
                "owners": {
                  "items": {
                    "$ref": "#/definitions/OwnersNoticeDate"
                  },
                  "type": "array"
                },
                "ownersKnown": {
                  "description": "Do you know the names and addresses of all owners and agricultural tenants?",
                  "enum": [
                    "all",
                    "some",
                    "none"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "interest",
                "certificate",
                "declaration"
              ],
              "type": "object"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "$ref": "#/definitions/ApplicantAddress",
              "description": "Address information for the applicant"
            },
            "agent": {
              "additionalProperties": false,
              "description": "Contact information for the agent or proxy",
              "properties": {
                "address": {
                  "$ref": "#/definitions/UserAddress"
                },
                "company": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "email": {
                  "$ref": "#/definitions/Email"
                },
                "name": {
                  "additionalProperties": false,
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "first",
                    "last"
                  ],
                  "type": "object"
                },
                "phone": {
                  "additionalProperties": false,
                  "properties": {
                    "primary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "primary"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "address",
                "email",
                "name",
                "phone"
              ],
              "type": "object"
            },
            "company": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/Email"
            },
            "maintenanceContact": {
              "$ref": "#/definitions/MaintenanceContacts",
              "description": "Contact information for the person(s) responsible for maintenace while the works are carried out"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "first": {
                  "type": "string"
                },
                "last": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "first",
                "last"
              ],
              "type": "object"
            },
            "ownership": {
              "additionalProperties": false,
              "description": "Information about the ownership certificate and property owners, if different than the applicant",
              "properties": {
                "agriculturalTenants": {
                  "description": "Does the land have any agricultural tenants?",
                  "type": "boolean"
                },
                "certificate": {
                  "enum": [
                    "a",
                    "b",
                    "c",
                    "d"
                  ],
                  "type": "string"
                },
                "declaration": {
                  "additionalProperties": false,
                  "description": "Declaration of the accuracy of the ownership certificate, including reasonable steps taken to find all owners and publish notice",
                  "properties": {
                    "accurate": {
                      "const": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "accurate"
                  ],
                  "type": "object"
                },
                "interest": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/OwnershipInterest"
                    },
                    {
                      "const": "owner.sole",
                      "type": "string"
                    },
                    {
                      "const": "owner.co",
                      "type": "string"
                    }
                  ]
                },
                "noticeGiven": {
                  "description": "Has requisite notice been given to all the known owners and agricultural tenants?",
                  "type": "boolean"
                },
                "noticePublished": {
                  "additionalProperties": false,
                  "description": "Has a notice of the application been published in a newspaper circulating in the area where the land is situated?",
                  "properties": {
                    "date": {
                      "$ref": "#/definitions/Date"
                    },
                    "newspaperName": {
                      "type": "string"
                    },
                    "status": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object"
                },
                "owners": {
                  "items": {
                    "$ref": "#/definitions/OwnersNoticeDate"
                  },
                  "type": "array"
                },
                "ownersKnown": {
                  "description": "Do you know the names and addresses of all owners and agricultural tenants?",
                  "enum": [
                    "all",
                    "some",
                    "none"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "interest",
                "certificate",
                "declaration"
              ],
              "type": "object"
            },
            "phone": {
              "additionalProperties": false,
              "properties": {
                "primary": {
                  "type": "string"
                }
              },
              "required": [
                "primary"
              ],
              "type": "object"
            },
            "siteContact": {
              "$ref": "#/definitions/SiteContact",
              "description": "Contact information for the site visit"
            },
            "type": {
              "description": "The type of applicant",
              "enum": [
                "individual",
                "company",
                "charity",
                "public",
                "parishCouncil"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "agent",
            "email",
            "name",
            "ownership",
            "phone",
            "siteContact",
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "PPApplicationData": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "CIL": {
              "$ref": "#/definitions/CommunityInfrastructureLevy"
            },
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFee"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "CIL": {
              "$ref": "#/definitions/CommunityInfrastructureLevy"
            },
            "declaration": {
              "$ref": "#/definitions/ApplicationDeclaration"
            },
            "fee": {
              "$ref": "#/definitions/ApplicationFee"
            },
            "leadDeveloper": {
              "$ref": "#/definitions/LeadDeveloper"
            },
            "planningApp": {
              "$ref": "#/definitions/PlanningApplication"
            },
            "preApp": {
              "$ref": "#/definitions/PreApplication"
            },
            "vacantBuildingCredit": {
              "type": "boolean"
            }
          },
          "required": [
            "declaration",
            "fee"
          ],
          "type": "object"
        }
      ],
      "description": "Specific ApplicationData required for \"Planning Permission\" applications"
    },
    "PPApplicationType": {
      "anyOf": [
        {
          "const": "pp",
          "description": "Planning Permission",
          "type": "string"
        },
        {
          "const": "pp.full",
          "description": "Planning Permission for development, including all householder, minor, and major applications",
          "type": "string"
        },
        {
          "const": "pp.full.advertConsent",
          "description": "Full Planning Permission and consent to display an advert",
          "type": "string"
        },
        {
          "const": "pp.full.demolition",
          "description": "Full Planning Permission including demolition in a Conservation Area",
          "type": "string"
        },
        {
          "const": "pp.full.fastTrack.affordable",
          "description": "Full Planning Permission - Fast track for the purposes of Affordable Housing",
          "type": "string"
        },
        {
          "const": "pp.full.householder",
          "description": "Planning Permission - Full householder",
          "type": "string"
        },
        {
          "const": "pp.full.householder.listed",
          "description": "Planning Permission - Full householder with consent to do works to a Listed Building",
          "type": "string"
        },
        {
          "const": "pp.full.householder.retro",
          "description": "Planning Permission - Full householder retrospective",
          "type": "string"
        },
        {
          "const": "pp.full.major",
          "description": "Planning Permission - Major application",
          "type": "string"
        },
        {
          "const": "pp.full.major.technicalDetails",
          "description": "Planning Permission - Technical details consent for major development",
          "type": "string"
        },
        {
          "const": "pp.full.major.technicalDetails.waste",
          "description": "Planning Permission - Technical details consent for waste development",
          "type": "string"
        },
        {
          "const": "pp.full.major.waste",
          "description": "Planning Permission - Full planning permission for waste development",
          "type": "string"
        },
        {
          "const": "pp.full.minor",
          "description": "Planning Permission - Minor application",
          "type": "string"
        },
        {
          "const": "pp.full.minor.listed",
          "description": "Planning Permission - Minor application and consent to do works to a Listed Building",
          "type": "string"
        },
        {
          "const": "pp.full.minor.technicalDetails",
          "description": "Planning Permission - Technical details consent for minor development",
          "type": "string"
        },
        {
          "const": "pp.mineralExtraction",
          "description": "Planning Permission - Consent to extract minerals and related development, such as temporary buildings and roads",
          "type": "string"
        },
        {
          "const": "pp.outline",
          "description": "Planning permission - Outline for proposed development",
          "type": "string"
        },
        {
          "const": "pp.outline.all",
          "description": "Outline Planning Permission - Consent for the principle of a project witholding all details",
          "type": "string"
        },
        {
          "const": "pp.outline.some",
          "description": "Outline Planning Permission - Consent for the principle of a project specifying some details",
          "type": "string"
        },
        {
          "const": "pp.outline.minor",
          "description": "Planning permission - Outline for proposed development (minor)",
          "type": "string"
        },
        {
          "const": "pp.outline.minor.all",
          "description": "Outline Planning Permission - Consent for the principle of a project witholding all details (minor)",
          "type": "string"
        },
        {
          "const": "pp.outline.minor.some",
          "description": "Outline Planning Permission - Consent for the principle of a project specifying some details (minor)",
          "type": "string"
        },
        {
          "const": "pp.outline.major",
          "description": "Planning permission - Outline for proposed development (major)",
          "type": "string"
        },
        {
          "const": "pp.outline.major.all",
          "description": "Outline Planning Permission - Consent for the principle of a project witholding all details (major)",
          "type": "string"
        },
        {
          "const": "pp.outline.major.all.waste",
          "description": "Outline Planning Permission - Consent for the principle of waste development witholding all details",
          "type": "string"
        },
        {
          "const": "pp.outline.major.some",
          "description": "Outline Planning Permission - Consent for the principle of a project specifying some details (major)",
          "type": "string"
        },
        {
          "const": "pp.outline.major.some.waste",
          "description": "Outline Planning Permission - Consent for the principle of waste development witholding some details",
          "type": "string"
        },
        {
          "const": "pp.pip",
          "description": "Planning Permission in Principle - Consent for the principle of a project with less than 1000 square metres floor area on a site of less than 1 hectare",
          "type": "string"
        }
      ]
    },
    "PPProperty": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ProposedAddress"
                },
                {
                  "$ref": "#/definitions/OSAddress"
                }
              ]
            },
            "boundary": {
              "$ref": "#/definitions/GeoBoundary",
              "description": "HM Land Registry Index polygon for this property, commonly referred to as the blue-line or title boundary, sourced from planning.data.gov.uk/dataset/title-boundary"
            },
            "localAuthorityDistrict": {
              "description": "Current and historic England Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "materials": {
              "$ref": "#/definitions/Materials"
            },
            "planning": {
              "additionalProperties": false,
              "description": "Planning constraints and policies that intersect with this site and may impact or restrict development",
              "properties": {
                "conditions": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "designations": {
                  "items": {
                    "$ref": "#/definitions/PlanningDesignation"
                  },
                  "type": "array"
                },
                "guidance": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "plans": {
                  "additionalProperties": false,
                  "properties": {
                    "local": {
                      "items": {
                        "$ref": "#/definitions/PlanningConstraint"
                      },
                      "type": "array"
                    },
                    "neighbourhood": {
                      "items": {
                        "$ref": "#/definitions/PlanningConstraint"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "local",
                    "neighbourhood"
                  ],
                  "type": "object"
                },
                "sources": {
                  "description": "A list of open data requests or websites that explain how these constraints were sourced",
                  "items": {
                    "$ref": "#/definitions/URL"
                  },
                  "type": "array"
                }
              },
              "required": [
                "sources"
              ],
              "type": "object"
            },
            "region": {
              "$ref": "#/definitions/Region"
            },
            "type": {
              "$ref": "#/definitions/PropertyType"
            },
            "use": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "description"
              ],
              "type": "object"
            }
          },
          "required": [
            "address",
            "localAuthorityDistrict",
            "region",
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "EPC": {
              "additionalProperties": false,
              "properties": {
                "known": {
                  "enum": [
                    "Yes",
                    "Yes, but only some of the properties have one",
                    "The property does not have one",
                    "No"
                  ],
                  "type": "string"
                },
                "number": {
                  "type": "string"
                }
              },
              "required": [
                "known"
              ],
              "title": "Energy Performance Certificate",
              "type": "object"
            },
            "address": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ProposedAddress"
                },
                {
                  "$ref": "#/definitions/OSAddress"
                }
              ]
            },
            "boundary": {
              "$ref": "#/definitions/GeoBoundary",
              "description": "HM Land Registry Index polygon for this property, commonly referred to as the blue-line or title boundary, sourced from planning.data.gov.uk/dataset/title-boundary"
            },
            "localAuthorityDistrict": {
              "description": "Current and historic England Local Authority Districts that contain this address sourced from planning.data.gov.uk/dataset/local-authority-district",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "materials": {
              "$ref": "#/definitions/Materials"
            },
            "parking": {
              "additionalProperties": false,
              "properties": {
                "buses": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "carClub": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "cars": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "cycles": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "disabled": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "motorcycles": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "offStreet": {
                  "additionalProperties": false,
                  "properties": {
                    "residential": {
                      "additionalProperties": false,
                      "properties": {
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "residential"
                  ],
                  "type": "object"
                },
                "other": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                },
                "vans": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "planning": {
              "additionalProperties": false,
              "description": "Planning constraints and policies that intersect with this site and may impact or restrict development",
              "properties": {
                "conditions": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "designations": {
                  "items": {
                    "$ref": "#/definitions/PlanningDesignation"
                  },
                  "type": "array"
                },
                "guidance": {
                  "items": {
                    "$ref": "#/definitions/PlanningConstraint"
                  },
                  "type": "array"
                },
                "plans": {
                  "additionalProperties": false,
                  "properties": {
                    "local": {
                      "items": {
                        "$ref": "#/definitions/PlanningConstraint"
                      },
                      "type": "array"
                    },
                    "neighbourhood": {
                      "items": {
                        "$ref": "#/definitions/PlanningConstraint"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "local",
                    "neighbourhood"
                  ],
                  "type": "object"
                },
                "sources": {
                  "description": "A list of open data requests or websites that explain how these constraints were sourced",
                  "items": {
                    "$ref": "#/definitions/URL"
                  },
                  "type": "array"
                }
              },
              "required": [
                "sources"
              ],
              "type": "object"
            },
            "region": {
              "const": "London",
              "type": "string"
            },
            "titleNumber": {
              "additionalProperties": false,
              "properties": {
                "known": {
                  "enum": [
                    "Yes",
                    "No"
                  ],
                  "type": "string"
                },
                "number": {
                  "type": "string"
                }
              },
              "required": [
                "known"
              ],
              "type": "object"
            },
            "type": {
              "$ref": "#/definitions/PropertyType"
            },
            "use": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "description"
              ],
              "type": "object"
            }
          },
          "required": [
            "address",
            "localAuthorityDistrict",
            "region",
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "PlanningApplication": {
      "additionalProperties": false,
      "description": "Details of the planning application linked to this application, if applicable",
      "properties": {
        "date": {
          "$ref": "#/definitions/Date"
        },
        "localPlanningAuthority": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        }
      },
      "required": [
        "reference",
        "date",
        "localPlanningAuthority"
      ],
      "type": "object"
    },
    "PlanningConstraint": {
      "$id": "#PlanningConstraint",
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "A planning constraint that does not intersect with the proposed site, per the DE-9IM spatial relationship definition of intersects",
          "properties": {
            "constraint": {
              "type": "string"
            },
            "intersects": {
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "constraint",
            "intersects"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A planning constraint that does intersect with the proposed site, per the DE-9IM spatial relationship definition of intersects",
          "properties": {
            "constraint": {
              "type": "string"
            },
            "entities": {
              "items": {
                "$ref": "#/definitions/Entity"
              },
              "type": "array"
            },
            "intersects": {
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "constraint",
            "entities",
            "intersects"
          ],
          "type": "object"
        }
      ],
      "description": "Planning constraints that intersect with the proposed site"
    },
    "PlanningDesignation": {
      "$id": "#PlanningDesignation",
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "A planning designation that does not intersect with the proposed site, per the DE-9IM spatial relationship definition of intersects",
          "properties": {
            "intersects": {
              "const": false,
              "type": "boolean"
            },
            "value": {
              "$ref": "#/definitions/BasePlanningDesignation"
            }
          },
          "required": [
            "intersects",
            "value"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A planning designation that does intersect with the proposed site, per the DE-9IM spatial relationship definition of intersects",
          "properties": {
            "entities": {
              "items": {
                "$ref": "#/definitions/Entity"
              },
              "type": "array"
            },
            "intersects": {
              "const": true,
              "type": "boolean"
            },
            "value": {
              "$ref": "#/definitions/BasePlanningDesignation"
            }
          },
          "required": [
            "intersects",
            "value"
          ],
          "type": "object"
        }
      ],
      "description": "Planning designations that may intersect with the proposed site determined by spatial queries against Planning Data (planning.data.gov.uk) and Ordnance Survey"
    },
    "Point": {
      "additionalProperties": false,
      "description": "Point geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.2",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "$ref": "#/definitions/Position"
        },
        "type": {
          "const": "Point",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "Polygon": {
      "additionalProperties": false,
      "description": "Polygon geometry object. https://tools.ietf.org/html/rfc7946#section-3.1.6",
      "properties": {
        "bbox": {
          "$ref": "#/definitions/BBox",
          "description": "Bounding box of the coordinate range of the object's Geometries, Features, or Feature Collections. The value of the bbox member is an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries. https://tools.ietf.org/html/rfc7946#section-5"
        },
        "coordinates": {
          "items": {
            "items": {
              "$ref": "#/definitions/Position"
            },
            "type": "array"
          },
          "type": "array"
        },
        "type": {
          "const": "Polygon",
          "description": "Specifies the type of GeoJSON object.",
          "type": "string"
        }
      },
      "required": [
        "coordinates",
        "type"
      ],
      "type": "object"
    },
    "Position": {
      "description": "A Position is an array of coordinates. https://tools.ietf.org/html/rfc7946#section-3.1.1 Array should contain between two and three elements. The previous GeoJSON specification allowed more elements (e.g., which could be used to represent M values), but the current specification only allows X, Y, and (optionally) Z to be defined.",
      "items": {
        "type": "number"
      },
      "type": "array"
    },
    "PreApplication": {
      "additionalProperties": false,
      "description": "Details of the pre-application preceeding this application, if applicable",
      "properties": {
        "date": {
          "$ref": "#/definitions/Date"
        },
        "officer": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "required": [
        "reference",
        "date",
        "officer",
        "summary"
      ],
      "type": "object"
    },
    "PreAssessment": {
      "$id": "#PreAssessment",
      "description": "The result of the application based on information provided by the applicant, prior to assessment by a planning officer. Results are determined by flags corresponding to responses; each application can have up to one result per flagset",
      "items": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "description"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "ProjectType": {
      "$id": "#ProjectType",
      "anyOf": [
        {
          "const": "alter",
          "description": "Alter a building",
          "type": "string"
        },
        {
          "const": "alter.balcony",
          "description": "Add or alter a balcony",
          "type": "string"
        },
        {
          "const": "alter.bayWindow",
          "description": "Add or remove a bay window",
          "type": "string"
        },
        {
          "const": "alter.bayWindow.add",
          "description": "Add a bay window",
          "type": "string"
        },
        {
          "const": "alter.bayWindow.rear",
          "description": "Add a bay window to the rear of the building",
          "type": "string"
        },
        {
          "const": "alter.bayWindow.remove",
          "description": "Remove a bay window",
          "type": "string"
        },
        {
          "const": "alter.boundary",
          "description": "Changes to a fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.add",
          "description": "Add a new fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.add.fence",
          "description": "Add a new fence",
          "type": "string"
        },
        {
          "const": "alter.boundary.add.gate",
          "description": "Add a new gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.add.wall",
          "description": "Add a new boundary wall",
          "type": "string"
        },
        {
          "const": "alter.boundary.alter",
          "description": "Change a fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.remove",
          "description": "Remove a fence, wall, or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.repair",
          "description": "Repair a fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.repair.fence",
          "description": "Repair a fence",
          "type": "string"
        },
        {
          "const": "alter.boundary.repair.gate",
          "description": "Repair a gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.repair.wall",
          "description": "Repair a wall",
          "type": "string"
        },
        {
          "const": "alter.boundary.replace",
          "description": "Replace a fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.replace.fence",
          "description": "Replace a fence",
          "type": "string"
        },
        {
          "const": "alter.boundary.replace.gate",
          "description": "Replace a gate",
          "type": "string"
        },
        {
          "const": "alter.boundary.replace.wall",
          "description": "Replace a wall",
          "type": "string"
        },
        {
          "const": "alter.cables",
          "description": "Install underground cables",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.boundary",
          "description": "Change the material of a fence, wall or gate",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.chimney",
          "description": "Change the material of chimneys",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.externalDoors",
          "description": "Change the material of external doors",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.externalWalls",
          "description": "Change the material of external walls",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.floors",
          "description": "Change the material of floors",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.hardstanding",
          "description": "Change the material of vehicle access or hardstanding",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.internalDoors",
          "description": "Change the material of internal doors",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.internalWalls",
          "description": "Change the material of internal walls",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.other",
          "description": "Change the material of something else",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.rainwaterGoods",
          "description": "Change the material of rainwater goods",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.roofCovering",
          "description": "Change the material of roof coverings",
          "type": "string"
        },
        {
          "const": "alter.changeOfMaterials.windows",
          "description": "Change the material of windows",
          "type": "string"
        },
        {
          "const": "alter.chimneys",
          "description": "Change chimneys",
          "type": "string"
        },
        {
          "const": "alter.chimneys.add",
          "description": "Add a chimney",
          "type": "string"
        },
        {
          "const": "alter.chimneys.replace",
          "description": "Replace a chimney",
          "type": "string"
        },
        {
          "const": "alter.decks",
          "description": "Add a verandah or deck",
          "type": "string"
        },
        {
          "const": "alter.decksHigh",
          "description": "Add a high verandah or deck",
          "type": "string"
        },
        {
          "const": "alter.drains",
          "description": "Work on drains",
          "type": "string"
        },
        {
          "const": "alter.equipment",
          "description": "Install equipment",
          "type": "string"
        },
        {
          "const": "alter.equipment.airConditioning",
          "description": "Install an air conditioning unit",
          "type": "string"
        },
        {
          "const": "alter.equipment.alarm",
          "description": "Install a security alarm",
          "type": "string"
        },
        {
          "const": "alter.equipment.antennae",
          "description": "Install a satellite dish or aerial",
          "type": "string"
        },
        {
          "const": "alter.equipment.antennae.aerial",
          "description": "Install an aerial antennae",
          "type": "string"
        },
        {
          "const": "alter.equipment.antennae.dish",
          "description": "Install a satellite dish",
          "type": "string"
        },
        {
          "const": "alter.equipment.bbq",
          "description": "Install a barbecue",
          "type": "string"
        },
        {
          "const": "alter.equipment.biomass",
          "description": "Install a flue with a biomass burner",
          "type": "string"
        },
        {
          "const": "alter.equipment.cctv",
          "description": "Install CCTV cameras",
          "type": "string"
        },
        {
          "const": "alter.equipment.charging",
          "description": "Install a car charging point",
          "type": "string"
        },
        {
          "const": "alter.equipment.heatPump",
          "description": "Install a heat pump",
          "type": "string"
        },
        {
          "const": "alter.equipment.heatPump.air",
          "description": "Install an air heat pump",
          "type": "string"
        },
        {
          "const": "alter.equipment.heatPump.ground",
          "description": "Install a ground heat pump",
          "type": "string"
        },
        {
          "const": "alter.equipment.heatPump.water",
          "description": "Install a water heat pump",
          "type": "string"
        },
        {
          "const": "alter.equipment.industrial",
          "description": "Install industrial equipment",
          "type": "string"
        },
        {
          "const": "alter.equipment.lighting",
          "description": "Install outdoor lights",
          "type": "string"
        },
        {
          "const": "alter.equipment.machinery",
          "description": "Install machinery",
          "type": "string"
        },
        {
          "const": "alter.equipment.solar",
          "description": "Install solar panels",
          "type": "string"
        },
        {
          "const": "alter.equipment.solar.pv",
          "description": "Install solar photovoltaics (PV)",
          "type": "string"
        },
        {
          "const": "alter.equipment.solar.thermal",
          "description": "Install solar thermal equipment",
          "type": "string"
        },
        {
          "const": "alter.equipment.tank",
          "description": "Install an outdoor tank (for example a water tank)",
          "type": "string"
        },
        {
          "const": "alter.equipment.ventilation",
          "description": "Install ventilation",
          "type": "string"
        },
        {
          "const": "alter.equipment.wifi",
          "description": "Install internet equipment",
          "type": "string"
        },
        {
          "const": "alter.equipment.wind",
          "description": "Install a wind turbine",
          "type": "string"
        },
        {
          "const": "alter.facades",
          "description": "Change the material or colour of the external walls",
          "type": "string"
        },
        {
          "const": "alter.facades.insulation",
          "description": "Change the insulation of the facade",
          "type": "string"
        },
        {
          "const": "alter.facades.paint",
          "description": "Paint the facade",
          "type": "string"
        },
        {
          "const": "alter.facades.rear",
          "description": "Change the material or colour of the external walls to the rear of the building",
          "type": "string"
        },
        {
          "const": "alter.facades.reclad",
          "description": "Change the cladding of the facade",
          "type": "string"
        },
        {
          "const": "alter.facades.repair",
          "description": "Repair the facade",
          "type": "string"
        },
        {
          "const": "alter.highways",
          "description": "Changes to a public road, pavement or path (including drop kerb)",
          "type": "string"
        },
        {
          "const": "alter.highways.access",
          "description": "Create a point of access to a highway",
          "type": "string"
        },
        {
          "const": "alter.highways.access.unclassified",
          "description": "Create a point of access to an unclassified road",
          "type": "string"
        },
        {
          "const": "alter.highways.dropKerb",
          "description": "Changes to a dropped kerb",
          "type": "string"
        },
        {
          "const": "alter.highways.droppedKerb",
          "description": "Changes to a dropped kerb",
          "type": "string"
        },
        {
          "const": "alter.highways.droppedKerb.add",
          "description": "Add a dropped kerb",
          "type": "string"
        },
        {
          "const": "alter.highways.droppedKerb.remove",
          "description": "Remove a dropped kerb",
          "type": "string"
        },
        {
          "const": "alter.highways.road",
          "description": "Changes to a road",
          "type": "string"
        },
        {
          "const": "alter.highways.road.add",
          "description": "Add a road",
          "type": "string"
        },
        {
          "const": "alter.highways.road.remove",
          "description": "Remove a road",
          "type": "string"
        },
        {
          "const": "alter.industrial.plant",
          "description": "Install plant equipment or machinery",
          "type": "string"
        },
        {
          "const": "alter.internal",
          "description": "Changes to internal walls or layout",
          "type": "string"
        },
        {
          "const": "alter.landscape",
          "description": "Landscaping works",
          "type": "string"
        },
        {
          "const": "alter.landscape.gardens",
          "description": "Add or remove a residential lawn or garden",
          "type": "string"
        },
        {
          "const": "alter.landscape.ponds",
          "description": "Add or remove a pond",
          "type": "string"
        },
        {
          "const": "alter.openings",
          "description": "Change a door or window opening",
          "type": "string"
        },
        {
          "const": "alter.openings.add",
          "description": "Add a door or window opening",
          "type": "string"
        },
        {
          "const": "alter.openings.add.door",
          "description": "Add one or more new doorways",
          "type": "string"
        },
        {
          "const": "alter.openings.add.door.front",
          "description": "Add new doorways to the front of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.add.door.rear",
          "description": "Add new doorways to the rear of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.add.door.side",
          "description": "Add new doorways to the side of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.add.window",
          "description": "Add one or more new windows",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows",
          "description": "Add one or more new windows",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows.front",
          "description": "Add new windows to the front of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows.high",
          "description": "Add new windows 1.7m up or higher",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows.rear",
          "description": "Add new windows to the rear of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows.shutters",
          "description": "Add new shutters to windows",
          "type": "string"
        },
        {
          "const": "alter.openings.add.windows.side",
          "description": "Add new windows to the side of the building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter",
          "description": "Change the size of doorways or windows",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.convert.doorToWindow",
          "description": "Convert a doorway into a window",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.convert.windowToDoor",
          "description": "Convert a window into a doorway",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.enlarge.door",
          "description": "Enlarge a door opening",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.enlarge.window",
          "description": "Enlarge a window opening",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.enlarge.window.front",
          "description": "Enlarge a window opening on the front of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.enlarge.window.rear",
          "description": "Enlarge a window opening on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.enlarge.window.side",
          "description": "Enlarge a window opening on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.reduce.door",
          "description": "Reduce the size of a door opening",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.reduce.window",
          "description": "Reduce the size of a window opening",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.reduce.window.front",
          "description": "Reduce the size of a window opening on the front of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.reduce.window.rear",
          "description": "Reduce the size of a window opening on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.alter.reduce.window.side",
          "description": "Reduce the size of a window opening on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.openings.remove",
          "description": "Block up doorways or windows",
          "type": "string"
        },
        {
          "const": "alter.openings.remove.door",
          "description": "Block up doorways",
          "type": "string"
        },
        {
          "const": "alter.openings.remove.window",
          "description": "Block up windows",
          "type": "string"
        },
        {
          "const": "alter.pipes",
          "description": "Install pipes",
          "type": "string"
        },
        {
          "const": "alter.remove",
          "description": "Remove part of a building (such as a decorative feature)",
          "type": "string"
        },
        {
          "const": "alter.remove.chimney",
          "description": "Remove a chimney",
          "type": "string"
        },
        {
          "const": "alter.remove.deck",
          "description": "Remove a deck",
          "type": "string"
        },
        {
          "const": "alter.remove.drain",
          "description": "Remove a drain",
          "type": "string"
        },
        {
          "const": "alter.remove.equipment",
          "description": "Remove energy equipment",
          "type": "string"
        },
        {
          "const": "alter.remove.facade",
          "description": "Remove part of a facade",
          "type": "string"
        },
        {
          "const": "alter.remove.soilPipe",
          "description": "Remove a soil pipe",
          "type": "string"
        },
        {
          "const": "alter.remove.surface",
          "description": "Remove a hard surface",
          "type": "string"
        },
        {
          "const": "alter.repair",
          "description": "Repair windows or doors",
          "type": "string"
        },
        {
          "const": "alter.repair.doors",
          "description": "Repair doors",
          "type": "string"
        },
        {
          "const": "alter.repair.windows",
          "description": "Repair windows",
          "type": "string"
        },
        {
          "const": "alter.replace",
          "description": "Replace windows or doors",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToDoors",
          "description": "Replace door with door",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToDoors.front",
          "description": "Replace door with door on the front of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToDoors.rear",
          "description": "Replace door with door on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToDoors.side",
          "description": "Replace door with door on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToWindows",
          "description": "Replace door with window",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToWindows.front",
          "description": "Replace door with window on the front of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToWindows.rear",
          "description": "Replace door with window on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.doorsToWindows.side",
          "description": "Replace door with window on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToDoors",
          "description": "Replace window with door",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToDoors.front",
          "description": "Replace window with door on the front of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToDoors.rear",
          "description": "Replace window with door on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToDoors.side",
          "description": "Replace window with door on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToWindows",
          "description": "Replace window with window",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToWindows.front",
          "description": "Replace window with window on the front ofa building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToWindows.rear",
          "description": "Replace window with window on the rear of a building",
          "type": "string"
        },
        {
          "const": "alter.replace.windowsToWindows.side",
          "description": "Replace window with window on the side of a building",
          "type": "string"
        },
        {
          "const": "alter.roof",
          "description": "Change the roof",
          "type": "string"
        },
        {
          "const": "alter.roof.materials",
          "description": "Replace or change the roof materials",
          "type": "string"
        },
        {
          "const": "alter.roof.parapet",
          "description": "Add or change a roof parapet",
          "type": "string"
        },
        {
          "const": "alter.roof.roofTerrace",
          "description": "Add a roof terrace",
          "type": "string"
        },
        {
          "const": "alter.roof.shape",
          "description": "Change the shape of a roof",
          "type": "string"
        },
        {
          "const": "alter.rooflight",
          "description": "Add skylights to an existing roof",
          "type": "string"
        },
        {
          "const": "alter.secondaryGlazing",
          "description": "Add secondary glazing to a window",
          "type": "string"
        },
        {
          "const": "alter.shopfronts",
          "description": "Add or alter shop fronts",
          "type": "string"
        },
        {
          "const": "alter.shutters",
          "description": "Add or alter shutters",
          "type": "string"
        },
        {
          "const": "alter.sign",
          "description": "Add an advert or sign",
          "type": "string"
        },
        {
          "const": "alter.soilPipes",
          "description": "Add or replace a soil pipe",
          "type": "string"
        },
        {
          "const": "alter.staircase",
          "description": "Add or change an external staircase",
          "type": "string"
        },
        {
          "const": "alter.surfaceLow",
          "description": "Add a low surface",
          "type": "string"
        },
        {
          "const": "alter.surfaces",
          "description": "Add a decked area or patio",
          "type": "string"
        },
        {
          "const": "alter.surfaces.deck",
          "description": "Add a decked area",
          "type": "string"
        },
        {
          "const": "alter.surfaces.parking",
          "description": "Add a driveway or parking area",
          "type": "string"
        },
        {
          "const": "alter.surfaces.parking.extend",
          "description": "Extend a driveway or parking area",
          "type": "string"
        },
        {
          "const": "alter.surfaces.parking.new",
          "description": "Add a new driveway or parking area",
          "type": "string"
        },
        {
          "const": "alter.surfaces.parking.replace",
          "description": "Replace a driveway or parking area",
          "type": "string"
        },
        {
          "const": "alter.surfaces.patio",
          "description": "Add a patio",
          "type": "string"
        },
        {
          "const": "alter.surfaces.patio.extend",
          "description": "Extend a patio",
          "type": "string"
        },
        {
          "const": "alter.surfaces.patio.new",
          "description": "Add a new patio",
          "type": "string"
        },
        {
          "const": "alter.surfaces.patio.replace",
          "description": "Replace a patio",
          "type": "string"
        },
        {
          "const": "alter.swimmingPool",
          "description": "Install a swimming pool",
          "type": "string"
        },
        {
          "const": "alter.swimmingPool.indoor",
          "description": "Install an indoor swimming pool",
          "type": "string"
        },
        {
          "const": "alter.swimmingPool.outdoor",
          "description": "Install an outdoor swimming pool",
          "type": "string"
        },
        {
          "const": "alter.trees",
          "description": "Changes to trees or hedges",
          "type": "string"
        },
        {
          "const": "alter.trees.hedge",
          "description": "Changes to hedges",
          "type": "string"
        },
        {
          "const": "alter.trees.hedge.letGrow",
          "description": "Let hedges grow",
          "type": "string"
        },
        {
          "const": "alter.trees.hedge.new",
          "description": "New hedges",
          "type": "string"
        },
        {
          "const": "alter.trees.hedge.prune",
          "description": "Prune hedges",
          "type": "string"
        },
        {
          "const": "alter.trees.hedge.remove",
          "description": "Remove hedges",
          "type": "string"
        },
        {
          "const": "alter.trees.tree",
          "description": "Changes to trees",
          "type": "string"
        },
        {
          "const": "alter.trees.tree.new",
          "description": "New trees",
          "type": "string"
        },
        {
          "const": "alter.trees.tree.prune",
          "description": "Prune trees",
          "type": "string"
        },
        {
          "const": "alter.trees.tree.remove",
          "description": "Remove trees",
          "type": "string"
        },
        {
          "const": "changeOfUse",
          "description": "Change the use of a building",
          "type": "string"
        },
        {
          "const": "changeOfUse.annexe",
          "description": "Convert part of the property into a  granny flat (residential annexe)",
          "type": "string"
        },
        {
          "const": "changeOfUse.caravans",
          "description": "Use a caravan or mobile home on the property",
          "type": "string"
        },
        {
          "const": "changeOfUse.extension",
          "description": "Convert an extension",
          "type": "string"
        },
        {
          "const": "changeOfUse.garage",
          "description": "Convert a garage",
          "type": "string"
        },
        {
          "const": "changeOfUse.land",
          "description": "Change the use of land",
          "type": "string"
        },
        {
          "const": "changeOfUse.let.part",
          "description": "Let a part of the property",
          "type": "string"
        },
        {
          "const": "changeOfUse.let.whole",
          "description": "Let the property",
          "type": "string"
        },
        {
          "const": "changeOfUse.outbuilding",
          "description": "Convert or change the use of an outbuilding (such as a shed, garage or barn)",
          "type": "string"
        },
        {
          "const": "changeOfUse.part",
          "description": "Convert or change the use of part of a building",
          "type": "string"
        },
        {
          "const": "changeOfUse.property",
          "description": "Change the use of a property",
          "type": "string"
        },
        {
          "const": "changeOfUse.whole",
          "description": "Convert or change the use of a whole building",
          "type": "string"
        },
        {
          "const": "changeOfUse.whole.homeToHMO",
          "description": "Convert a home to bedsits or a shared home",
          "type": "string"
        },
        {
          "const": "changeOfUse.workFromHome",
          "description": "Work from home",
          "type": "string"
        },
        {
          "const": "demolish",
          "description": "Demolish a building",
          "type": "string"
        },
        {
          "const": "demolish.boundary",
          "description": "Demolish a fence, gate or boundary wall",
          "type": "string"
        },
        {
          "const": "demolish.full",
          "description": "Total demolition of a building",
          "type": "string"
        },
        {
          "const": "demolish.internal",
          "description": "Demolish internal walls",
          "type": "string"
        },
        {
          "const": "demolish.listed",
          "description": "Demolish a listed building",
          "type": "string"
        },
        {
          "const": "demolish.listed.full",
          "description": "Total demolition of a listed building",
          "type": "string"
        },
        {
          "const": "demolish.listed.part",
          "description": "Demolish part of a listed building",
          "type": "string"
        },
        {
          "const": "demolish.outbuilding",
          "description": "Demolish an outbuilding (such as a garage or barn)",
          "type": "string"
        },
        {
          "const": "demolish.outbuilding.full",
          "description": "Total demolition of an outbuilding (such as a garage or barn)",
          "type": "string"
        },
        {
          "const": "demolish.outbuilding.part",
          "description": "Demolish part of an outbuilding (such as a garage or barn)",
          "type": "string"
        },
        {
          "const": "demolish.part",
          "description": "Demolish part of a building (such as an extension)",
          "type": "string"
        },
        {
          "const": "demolish.part.conservatory",
          "description": "Demolish part of a conservatory",
          "type": "string"
        },
        {
          "const": "demolish.replace",
          "description": "Demolish a building and build homes in its place",
          "type": "string"
        },
        {
          "const": "extend",
          "description": "Extend a building or add an outbuilding",
          "type": "string"
        },
        {
          "const": "extend.balcony",
          "description": "Enlarge a balcony",
          "type": "string"
        },
        {
          "const": "extend.basement",
          "description": "Add a basement extension",
          "type": "string"
        },
        {
          "const": "extend.basement.extend",
          "description": "Enlarge a basement",
          "type": "string"
        },
        {
          "const": "extend.basement.lightwell",
          "description": "Add a lightwell",
          "type": "string"
        },
        {
          "const": "extend.basement.new",
          "description": "Add a new basement extension",
          "type": "string"
        },
        {
          "const": "extend.front",
          "description": "Add a front extension",
          "type": "string"
        },
        {
          "const": "extend.outbuilding",
          "description": "Add an outbuilding (such as a shed, garage or garden office)",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.animals",
          "description": "Add an outbuilding - animal enclosure, aviary or beehive",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.annexe",
          "description": "Add an outbuilding - residential (or \"granny\") annexe",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.bedroom",
          "description": "Add an outbuilding - bedroom or guest room",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.games",
          "description": "Add an outbuilding - games room",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.garage",
          "description": "Add an outbuilding - garage",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.greenhouse",
          "description": "Add an outbuilding - greenhouse",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.gym",
          "description": "Add an outbuilding - gym",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.office",
          "description": "Add an outbuilding - office",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.other",
          "description": "Add an outbuilding - something else",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.play",
          "description": "Add an outbuilding - play house",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.sauna",
          "description": "Add an outbuilding - sauna",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.shed",
          "description": "Add an outbuilding - shed",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.shelter",
          "description": "Add an outbuilding - car parking or smoking shelter",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.store",
          "description": "Add an outbuilding - storage",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.studio",
          "description": "Add an outbuilding - studio",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.summerHouse",
          "description": "Add an outbuilding - summer house",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.swimmingPool",
          "description": "Add an outbuilding - swimming pool",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.tank",
          "description": "Add an outbuilding - tank",
          "type": "string"
        },
        {
          "const": "extend.outbuilding.workshop",
          "description": "Add an outbuilding - workshop",
          "type": "string"
        },
        {
          "const": "extend.porch",
          "description": "Add a porch",
          "type": "string"
        },
        {
          "const": "extend.porch.front",
          "description": "Add a porch to the front of the building",
          "type": "string"
        },
        {
          "const": "extend.porch.rear",
          "description": "Add a porch to the rear of the building",
          "type": "string"
        },
        {
          "const": "extend.porch.side",
          "description": "Add a porch to the side of the building",
          "type": "string"
        },
        {
          "const": "extend.rear",
          "description": "Add a rear or side extension (or conservatory)",
          "type": "string"
        },
        {
          "const": "extend.rear.rear",
          "description": "Add a rear extension",
          "type": "string"
        },
        {
          "const": "extend.rear.side",
          "description": "Add a side extension",
          "type": "string"
        },
        {
          "const": "extend.roof",
          "description": "Add a roof extension",
          "type": "string"
        },
        {
          "const": "extend.roof.connect",
          "description": "Join two roofs",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer",
          "description": "Add a roof dormer",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer.front",
          "description": "Add a roof dormer to the front of the building",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer.frontAndRear",
          "description": "Add a roof dormer to the front and rear of the building",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer.mansard",
          "description": "Add a mansard roof",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer.rear",
          "description": "Add a roof dormer to the rear of the building",
          "type": "string"
        },
        {
          "const": "extend.roof.dormer.side",
          "description": "Add a roof dormer to the side of the building",
          "type": "string"
        },
        {
          "const": "extend.roof.hiptogable",
          "description": "Convert a hip roof to a gable",
          "type": "string"
        },
        {
          "const": "extend.roof.hipToGable",
          "description": "Convert a hip roof to a gable",
          "type": "string"
        },
        {
          "const": "extend.roof.mansard",
          "description": "Convert to a mansard roof",
          "type": "string"
        },
        {
          "const": "extend.roof.newstorey",
          "description": "Add one or more new storeys",
          "type": "string"
        },
        {
          "const": "extend.roof.newStorey",
          "description": "Add one or more new storeys",
          "type": "string"
        },
        {
          "const": "extend.roof.slope",
          "description": "Convert to a sloping roof",
          "type": "string"
        },
        {
          "const": "extend.side",
          "description": "Add a side extension",
          "type": "string"
        },
        {
          "const": "extend.upperStorey",
          "description": "Add an upper storey extension",
          "type": "string"
        },
        {
          "const": "internal",
          "description": "Internal building works, such as change the internal layout",
          "type": "string"
        },
        {
          "const": "internal.doorways",
          "description": "Alter internal doors",
          "type": "string"
        },
        {
          "const": "internal.finishes",
          "description": "Alter internal finishes",
          "type": "string"
        },
        {
          "const": "internal.floors",
          "description": "Alter internal floors",
          "type": "string"
        },
        {
          "const": "internal.loft",
          "description": "Convert a loft",
          "type": "string"
        },
        {
          "const": "internal.mezzanine",
          "description": "Add a mezzanine floor",
          "type": "string"
        },
        {
          "const": "internal.staircases",
          "description": "Alter internal staircases",
          "type": "string"
        },
        {
          "const": "internal.walls",
          "description": "Alter internal walls",
          "type": "string"
        },
        {
          "const": "internal.windows.openings",
          "description": "Alter internal window openings",
          "type": "string"
        },
        {
          "const": "maintain",
          "description": "Maintenance of an existing structure",
          "type": "string"
        },
        {
          "const": "new",
          "description": "Add a new separate building or self-contained units",
          "type": "string"
        },
        {
          "const": "new.agriculture",
          "description": "New agricultural buildings",
          "type": "string"
        },
        {
          "const": "new.agriculture.glasshouse",
          "description": "New agricultural buildings - glasshouse",
          "type": "string"
        },
        {
          "const": "new.agriculture.mining",
          "description": "New agricultural buildings - mining",
          "type": "string"
        },
        {
          "const": "new.agriculture.pigs",
          "description": "New agricultural buildings - pigs",
          "type": "string"
        },
        {
          "const": "new.agriculture.poultry",
          "description": "New agricultural buildings - poultry",
          "type": "string"
        },
        {
          "const": "new.clickCollect",
          "description": "Install click and collect facilities",
          "type": "string"
        },
        {
          "const": "new.dwelling",
          "description": "New, self-contained dwelling",
          "type": "string"
        },
        {
          "const": "new.dwelling.flat",
          "description": "New flats",
          "type": "string"
        },
        {
          "const": "new.dwelling.house",
          "description": "New houses",
          "type": "string"
        },
        {
          "const": "new.forestry",
          "description": "Build new forestry buildings",
          "type": "string"
        },
        {
          "const": "new.industrial",
          "description": "New industrial premises",
          "type": "string"
        },
        {
          "const": "new.industrial.waste",
          "description": "New waste disposal facilities",
          "type": "string"
        },
        {
          "const": "new.leisure",
          "description": "New leisure premises",
          "type": "string"
        },
        {
          "const": "new.office",
          "description": "New offices",
          "type": "string"
        },
        {
          "const": "new.other",
          "description": "Add another type of building - something else",
          "type": "string"
        },
        {
          "const": "new.residential.dwelling",
          "description": "Build new homes",
          "type": "string"
        },
        {
          "const": "new.retail",
          "description": "New retail premises",
          "type": "string"
        },
        {
          "const": "new.telecoms",
          "description": "Install telecommunications equipment",
          "type": "string"
        },
        {
          "const": "new.temporaryStructure",
          "description": "Build a temporary structure",
          "type": "string"
        },
        {
          "const": "new.warehouse",
          "description": "New storage or distribution premises",
          "type": "string"
        },
        {
          "const": "not",
          "description": "Negate a project type",
          "type": "string"
        },
        {
          "const": "not.alter.replace",
          "description": "Do not add or change windows or doors",
          "type": "string"
        },
        {
          "const": "not.alter.rooflight",
          "description": "Do not add or change a rooflight",
          "type": "string"
        },
        {
          "const": "not.dropKerb",
          "description": "Do not add or change a dropped kerb",
          "type": "string"
        },
        {
          "const": "repair",
          "description": "Repairs",
          "type": "string"
        },
        {
          "const": "repair.historicFabric",
          "description": "Repair the historic fabric",
          "type": "string"
        },
        {
          "const": "other",
          "description": "Other project type",
          "type": "string"
        },
        {
          "const": "unit",
          "description": "Change of units",
          "type": "string"
        },
        {
          "const": "unit.merge",
          "description": "Convert two or more properties into one",
          "type": "string"
        },
        {
          "const": "unit.subdivide",
          "description": "Convert a home or part of a home into flats",
          "type": "string"
        }
      ],
      "description": "Planning project types"
    },
    "PropertyBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnglandProperty"
        },
        {
          "$ref": "#/definitions/LondonProperty"
        }
      ]
    },
    "PropertyType": {
      "$id": "#PropertyType",
      "anyOf": [
        {
          "const": "commercial",
          "description": "Commercial",
          "type": "string"
        },
        {
          "const": "commercial.abattoir",
          "description": "Slaughter House / Abattoir",
          "type": "string"
        },
        {
          "const": "commercial.agriculture",
          "description": "Agricultural",
          "type": "string"
        },
        {
          "const": "commercial.agriculture.farm",
          "description": "Farm / Non-Residential Associated Building",
          "type": "string"
        },
        {
          "const": "commercial.ancillary",
          "description": "Ancillary Building",
          "type": "string"
        },
        {
          "const": "commercial.animals",
          "description": "Animal Centre",
          "type": "string"
        },
        {
          "const": "commercial.animals.equestrian",
          "description": "Equestrian",
          "type": "string"
        },
        {
          "const": "commercial.animals.equestrian.racing",
          "description": "Horse Racing / Breeding Stable",
          "type": "string"
        },
        {
          "const": "commercial.animals.equestrian.riding",
          "description": "Commercial Stabling / Riding",
          "type": "string"
        },
        {
          "const": "commercial.animals.kennelsCattery",
          "description": "Cattery / Kennel",
          "type": "string"
        },
        {
          "const": "commercial.animals.sanctuary",
          "description": "Animal / Bird / Marine Sanctuary",
          "type": "string"
        },
        {
          "const": "commercial.animals.sanctuary.animals",
          "description": "Animal Sanctuary",
          "type": "string"
        },
        {
          "const": "commercial.animals.sanctuary.marine",
          "description": "Marine Sanctuary",
          "type": "string"
        },
        {
          "const": "commercial.animals.services",
          "description": "Animal Services",
          "type": "string"
        },
        {
          "const": "commercial.animals.services.quarantine",
          "description": "Animal Quarantining",
          "type": "string"
        },
        {
          "const": "commercial.animals.vet",
          "description": "Vet / Animal Medical Treatment",
          "type": "string"
        },
        {
          "const": "commercial.community",
          "description": "Community Services",
          "type": "string"
        },
        {
          "const": "commercial.community.CCTV",
          "description": "CCTV",
          "type": "string"
        },
        {
          "const": "commercial.community.cemetery",
          "description": "Cemetery / Crematorium / Graveyard. In Current Use.",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.Cemetery",
          "description": "Cemetery",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.chapelOfRest",
          "description": "Chapel Of Rest",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.columbarium",
          "description": "Columbarium",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.crematorium",
          "description": "Crematorium",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.military",
          "description": "Military Cemetery",
          "type": "string"
        },
        {
          "const": "commercial.community.Cemetery.mortuary",
          "description": "Mortuary",
          "type": "string"
        },
        {
          "const": "commercial.community.court",
          "description": "Law Court",
          "type": "string"
        },
        {
          "const": "commercial.community.employment",
          "description": "Job Centre",
          "type": "string"
        },
        {
          "const": "commercial.community.hall",
          "description": "Public / Village Hall / Other Community Facility",
          "type": "string"
        },
        {
          "const": "commercial.community.hall.club",
          "description": "Youth Recreational / Social Club",
          "type": "string"
        },
        {
          "const": "commercial.community.HWRC",
          "description": "Public Household Waste Recycling Centre (HWRC)",
          "type": "string"
        },
        {
          "const": "commercial.community.prison",
          "description": "Prison",
          "type": "string"
        },
        {
          "const": "commercial.community.prison.detention",
          "description": "HM Detention Centre",
          "type": "string"
        },
        {
          "const": "commercial.community.prison.secureResidential",
          "description": "Secure Residential Accommodation",
          "type": "string"
        },
        {
          "const": "commercial.community.prison.service",
          "description": "HM Prison Service",
          "type": "string"
        },
        {
          "const": "commercial.community.recycling",
          "description": "Recycling Site",
          "type": "string"
        },
        {
          "const": "commercial.community.religious",
          "description": "Church Hall / Religious Meeting Place / Hall",
          "type": "string"
        },
        {
          "const": "commercial.community.services",
          "description": "Community Service Centre / Office",
          "type": "string"
        },
        {
          "const": "commercial.community.wc",
          "description": "Public Convenience",
          "type": "string"
        },
        {
          "const": "commercial.education",
          "description": "Education",
          "type": "string"
        },
        {
          "const": "commercial.education.college",
          "description": "College",
          "type": "string"
        },
        {
          "const": "commercial.education.college.further",
          "description": "Further Education",
          "type": "string"
        },
        {
          "const": "commercial.education.college.higher",
          "description": "Higher Education",
          "type": "string"
        },
        {
          "const": "commercial.education.nursery",
          "description": "Children's Nursery / Crèche",
          "type": "string"
        },
        {
          "const": "commercial.education.other",
          "description": "Other Educational Establishment",
          "type": "string"
        },
        {
          "const": "commercial.education.school",
          "description": "Preparatory / First / Primary / Infant / Junior / Middle School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.first",
          "description": "First School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.infant",
          "description": "Infant School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.junior",
          "description": "Junior School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.middle",
          "description": "Middle School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.primary.private",
          "description": "Non State Primary / Preparatory School",
          "type": "string"
        },
        {
          "const": "commercial.education.school.primary.state",
          "description": "Primary School",
          "type": "string"
        },
        {
          "const": "commercial.education.secondarySchool",
          "description": "Secondary / High School",
          "type": "string"
        },
        {
          "const": "commercial.education.secondarySchool.private",
          "description": "Non State Secondary School",
          "type": "string"
        },
        {
          "const": "commercial.education.secondarySchool.state",
          "description": "Secondary School",
          "type": "string"
        },
        {
          "const": "commercial.education.specialNeeds",
          "description": "Special Needs Establishment.",
          "type": "string"
        },
        {
          "const": "commercial.education.university",
          "description": "University",
          "type": "string"
        },
        {
          "const": "commercial.emergency",
          "description": "Emergency / Rescue Service",
          "type": "string"
        },
        {
          "const": "commercial.fish",
          "description": "Fishery",
          "type": "string"
        },
        {
          "const": "commercial.fish.farm",
          "description": "Fish Farming",
          "type": "string"
        },
        {
          "const": "commercial.fish.hatchery",
          "description": "Fish Hatchery",
          "type": "string"
        },
        {
          "const": "commercial.fish.oysters",
          "description": "Oyster / Mussel Bed",
          "type": "string"
        },
        {
          "const": "commercial.fish.processing",
          "description": "Fish Processing",
          "type": "string"
        },
        {
          "const": "commercial.guest",
          "description": "Hotel / Motel / Boarding / Guest House",
          "type": "string"
        },
        {
          "const": "commercial.guest.hostel",
          "description": "Boarding / Guest House / Bed And Breakfast / Youth Hostel",
          "type": "string"
        },
        {
          "const": "commercial.guest.hostel.youth",
          "description": "Youth Hostel",
          "type": "string"
        },
        {
          "const": "commercial.guest.hotel",
          "description": "Hotel/Motel",
          "type": "string"
        },
        {
          "const": "commercial.guest.shortLet",
          "description": "Holiday Let/Accommodation/Short-Term Let Other Than CH01",
          "type": "string"
        },
        {
          "const": "commercial.horticulture",
          "description": "Horticulture",
          "type": "string"
        },
        {
          "const": "commercial.horticulture.smallholding",
          "description": "Smallholding",
          "type": "string"
        },
        {
          "const": "commercial.horticulture.vineyard",
          "description": "Vineyard",
          "type": "string"
        },
        {
          "const": "commercial.horticulture.watercress",
          "description": "Watercress Bed",
          "type": "string"
        },
        {
          "const": "commercial.industrial",
          "description": "Industrial Applicable to manufacturing, engineering, maintenance, storage / wholesale distribution and extraction sites",
          "type": "string"
        },
        {
          "const": "commercial.industrial.distribution",
          "description": "Wholesale Distribution",
          "type": "string"
        },
        {
          "const": "commercial.industrial.distribution.solidFuel",
          "description": "Solid Fuel Distribution",
          "type": "string"
        },
        {
          "const": "commercial.industrial.distribution.timber",
          "description": "Timber Distribution",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction",
          "description": "Mineral / Ore Working / Quarry / Mine",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction.distribution",
          "description": "Mineral Distribution / Storage",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction.mining",
          "description": "Mineral Mining / Active",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction.oilGas",
          "description": "Oil / Gas Extraction / Active",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction.processing",
          "description": "Mineral Processing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.extraction.quarrying",
          "description": "Mineral Quarrying / Open Extraction / Active",
          "type": "string"
        },
        {
          "const": "commercial.industrial.incineration",
          "description": "Incinerator / Waste Transfer Station",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light",
          "description": "Workshop / Light Industrial",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.garage",
          "description": "Servicing Garage",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.storage",
          "description": "Warehouse / Store / Storage Depot",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.storage.crops",
          "description": "Crop Handling / Storage",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.storage.post",
          "description": "Postal Sorting / Distribution",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.storage.solidFuel",
          "description": "Solid Fuel Storage",
          "type": "string"
        },
        {
          "const": "commercial.industrial.light.storage.timber",
          "description": "Timber Storage",
          "type": "string"
        },
        {
          "const": "commercial.industrial.maintenanceDepot",
          "description": "Maintenance Depot",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing",
          "description": "Factory/Manufacturing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.aircraft",
          "description": "Aircraft Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.beer",
          "description": "Brewery",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.boats",
          "description": "Boat Building",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.bricks",
          "description": "Brick Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.cement",
          "description": "Cement Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.chemicals",
          "description": "Chemical Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.cider",
          "description": "Cider Manufacture",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.dairy",
          "description": "Dairy Processing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.distillery",
          "description": "Distillery",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.flour",
          "description": "Flour Mill",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.food",
          "description": "Food Processing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.glass",
          "description": "Glassworks",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.hops",
          "description": "Oast House",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.oil",
          "description": "Oil Refining",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.other",
          "description": "Manufacturing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.paper",
          "description": "Paper Mill",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.pottery",
          "description": "Pottery Manufacturing",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.printing",
          "description": "Printing Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.ships",
          "description": "Shipyard",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.steel",
          "description": "Steel Works",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.sugar",
          "description": "Sugar Refinery",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.timber",
          "description": "Timber Mill",
          "type": "string"
        },
        {
          "const": "commercial.industrial.manufacturing.wine",
          "description": "Winery",
          "type": "string"
        },
        {
          "const": "commercial.industrial.recycling",
          "description": "Recycling Plant",
          "type": "string"
        },
        {
          "const": "commercial.leisure",
          "description": "Leisure - Applicable to recreational sites and enterprises",
          "type": "string"
        },
        {
          "const": "commercial.leisure.amusements",
          "description": "Amusements",
          "type": "string"
        },
        {
          "const": "commercial.leisure.amusements.pier",
          "description": "Leisure Pier",
          "type": "string"
        },
        {
          "const": "commercial.leisure.arena",
          "description": "Arena / Stadium",
          "type": "string"
        },
        {
          "const": "commercial.leisure.arena.showground",
          "description": "Showground",
          "type": "string"
        },
        {
          "const": "commercial.leisure.arena.stadium",
          "description": "Stadium",
          "type": "string"
        },
        {
          "const": "commercial.leisure.beachHut",
          "description": "Beach Hut (Recreational, Non-Residential Use Only)",
          "type": "string"
        },
        {
          "const": "commercial.leisure.club.private",
          "description": "Licensed Private Members' Club",
          "type": "string"
        },
        {
          "const": "commercial.leisure.club.social",
          "description": "Recreational / Social Club",
          "type": "string"
        },
        {
          "const": "commercial.leisure.entertainment",
          "description": "Bingo Hall / Cinema / Conference / Exhibition Centre / Theatre / Concert Hall",
          "type": "string"
        },
        {
          "const": "commercial.leisure.entertainment.cinema",
          "description": "Cinema",
          "type": "string"
        },
        {
          "const": "commercial.leisure.entertainment.exhibition",
          "description": "Conference / Exhibition Centre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.entertainment.mixed",
          "description": "Entertainment Complex",
          "type": "string"
        },
        {
          "const": "commercial.leisure.entertainment.theatre",
          "description": "Theatre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday",
          "description": "Holiday / Campsite",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday.accommodation",
          "description": "Holiday Accommodation",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday.camping",
          "description": "Camping",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday.caravanning",
          "description": "Caravanning",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday.centre",
          "description": "Holiday Centre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.holiday.youth",
          "description": "Youth Organisation Camp",
          "type": "string"
        },
        {
          "const": "commercial.leisure.library",
          "description": "Library",
          "type": "string"
        },
        {
          "const": "commercial.leisure.library.readingRoom",
          "description": "Reading Room",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum",
          "description": "Museum / Gallery",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.art",
          "description": "Art Centre / Gallery",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.aviation",
          "description": "Aviation Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.heritage",
          "description": "Heritage Centre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.industrial",
          "description": "Industrial Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.maritime",
          "description": "Maritime Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.military",
          "description": "Military Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.science",
          "description": "Science Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.museum.transport",
          "description": "Transport Museum",
          "type": "string"
        },
        {
          "const": "commercial.leisure.park.amusement",
          "description": "Amusement Park",
          "type": "string"
        },
        {
          "const": "commercial.leisure.park.aquatic",
          "description": "Aquatic Attraction",
          "type": "string"
        },
        {
          "const": "commercial.leisure.park.model",
          "description": "Model Village Site",
          "type": "string"
        },
        {
          "const": "commercial.leisure.park.wildlife",
          "description": "Wildlife / Zoological Park",
          "type": "string"
        },
        {
          "const": "commercial.leisure.park.zoo",
          "description": "Zoo / Theme Park",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport",
          "description": "Indoor / Outdoor Leisure / Sporting Activity / Centre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.athletics",
          "description": "Athletics Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.bowls",
          "description": "Bowls Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.centre",
          "description": "Activity / Leisure / Sports Centre",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.cricket",
          "description": "Cricket Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.curling",
          "description": "Curling Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.cycling",
          "description": "Cycling Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.dogracing",
          "description": "Greyhound Racing Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.equestrian",
          "description": "Equestrian Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.firing",
          "description": "Civilian Firing Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.fishing",
          "description": "Fishing / Angling Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.football",
          "description": "Football Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.gliding",
          "description": "Gliding Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.golf",
          "description": "Golf Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.historicVehicles",
          "description": "Historic Vessel / Aircraft / Vehicle",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.hockey",
          "description": "Hockey Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.horseracing",
          "description": "Horse Racing Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.model",
          "description": "Model Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.motor",
          "description": "Motor Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.playingField",
          "description": "Playing Field",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.racquet",
          "description": "Racquet Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.recreationGround",
          "description": "Recreation Ground",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.rugby",
          "description": "Rugby Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.shinty",
          "description": "Shinty Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.skateboarding",
          "description": "Skateboarding Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.swimming",
          "description": "Diving / Swimming Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.tennis",
          "description": "Public Tennis Court",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.tenpin",
          "description": "Tenpin Bowling Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.water",
          "description": "Water Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.wildlife",
          "description": "Wildlife Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.leisure.sport.winter",
          "description": "Winter Sports Facility",
          "type": "string"
        },
        {
          "const": "commercial.medical",
          "description": "Medical",
          "type": "string"
        },
        {
          "const": "commercial.medical.assessment",
          "description": "Assessment / Development Services",
          "type": "string"
        },
        {
          "const": "commercial.medical.care",
          "description": "Hospital / Hospice",
          "type": "string"
        },
        {
          "const": "commercial.medical.care.home",
          "description": "Care home/Hospice",
          "type": "string"
        },
        {
          "const": "commercial.medical.care.hospital",
          "description": "Hospital",
          "type": "string"
        },
        {
          "const": "commercial.medical.dentist",
          "description": "Dentist",
          "type": "string"
        },
        {
          "const": "commercial.medical.GP",
          "description": "General Practice Surgery / Clinic",
          "type": "string"
        },
        {
          "const": "commercial.medical.healthCentre",
          "description": "Health Centre",
          "type": "string"
        },
        {
          "const": "commercial.medical.healthServices",
          "description": "Health Care Services",
          "type": "string"
        },
        {
          "const": "commercial.medical.lab",
          "description": "Medical / Testing / Research Laboratory",
          "type": "string"
        },
        {
          "const": "commercial.medical.professional",
          "description": "Professional Medical Service",
          "type": "string"
        },
        {
          "const": "commercial.office",
          "description": "Office",
          "type": "string"
        },
        {
          "const": "commercial.office.broadcasting",
          "description": "Broadcasting (TV / Radio)",
          "type": "string"
        },
        {
          "const": "commercial.office.workspace",
          "description": "Office / Work Studio",
          "type": "string"
        },
        {
          "const": "commercial.office.workspace.embassy",
          "description": "Embassy /, High Commission / Consulate",
          "type": "string"
        },
        {
          "const": "commercial.office.workspace.film",
          "description": "Film Studio",
          "type": "string"
        },
        {
          "const": "commercial.office.workspace.gov.local",
          "description": "Local Government Service",
          "type": "string"
        },
        {
          "const": "commercial.office.workspace.gov.national",
          "description": "Central Government Service",
          "type": "string"
        },
        {
          "const": "commercial.retail",
          "description": "Retail",
          "type": "string"
        },
        {
          "const": "commercial.retail.atm",
          "description": "Automated Teller Machine (ATM)",
          "type": "string"
        },
        {
          "const": "commercial.retail.drinking",
          "description": "Public House / Bar / Nightclub",
          "type": "string"
        },
        {
          "const": "commercial.retail.financial",
          "description": "Bank / Financial Service",
          "type": "string"
        },
        {
          "const": "commercial.retail.fuel",
          "description": "Petrol Filling Station",
          "type": "string"
        },
        {
          "const": "commercial.retail.licensedPremises",
          "description": "Other Licensed Premise / Vendor",
          "type": "string"
        },
        {
          "const": "commercial.retail.market",
          "description": "Market (Indoor / Outdoor)",
          "type": "string"
        },
        {
          "const": "commercial.retail.market.fish",
          "description": "Fish Market",
          "type": "string"
        },
        {
          "const": "commercial.retail.market.fruit",
          "description": "Fruit / Vegetable Market",
          "type": "string"
        },
        {
          "const": "commercial.retail.market.livestock",
          "description": "Livestock Market",
          "type": "string"
        },
        {
          "const": "commercial.retail.post",
          "description": "Post Office",
          "type": "string"
        },
        {
          "const": "commercial.retail.restaurant",
          "description": "Restaurant / Cafeteria",
          "type": "string"
        },
        {
          "const": "commercial.retail.services",
          "description": "Retail Service Agent",
          "type": "string"
        },
        {
          "const": "commercial.retail.shop",
          "description": "Shop",
          "type": "string"
        },
        {
          "const": "commercial.retail.shop.gardenCentre",
          "description": "Garden Centre",
          "type": "string"
        },
        {
          "const": "commercial.retail.showroom",
          "description": "Shop / Showroom",
          "type": "string"
        },
        {
          "const": "commercial.retail.takeaway",
          "description": "Fast Food Outlet / Takeaway (Hot / Cold)",
          "type": "string"
        },
        {
          "const": "commercial.storageLand",
          "description": "Storage Land",
          "type": "string"
        },
        {
          "const": "commercial.storageLand.building",
          "description": "Builders' Yard",
          "type": "string"
        },
        {
          "const": "commercial.storageLand.general",
          "description": "General Storage Land",
          "type": "string"
        },
        {
          "const": "commercial.transport",
          "description": "Transport",
          "type": "string"
        },
        {
          "const": "commercial.transport.air",
          "description": "Airfield / Airstrip / Airport / Air Transport Infrastructure Facility",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.airfield",
          "description": "Airfield",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.airport",
          "description": "Airport",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.helicopterStation",
          "description": "Helicopter Station",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.heliport",
          "description": "Heliport / Helipad",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.infrastructure",
          "description": "Air Transport Infrastructure Services",
          "type": "string"
        },
        {
          "const": "commercial.transport.air.passengerTerminal",
          "description": "Air Passenger Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.bus",
          "description": "Bus Shelter",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock",
          "description": "Harbour / Port / Dock / Dockyard / Slipway / Landing Stage / Pier / Jetty / Pontoon / Terminal / Berthing / Quay",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.ferry.passengers",
          "description": "Passenger Ferry Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.ferry.vehicles",
          "description": "Vehicular Ferry Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.generalBerth",
          "description": "Non-Tanker Nautical Berthing",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.passenger",
          "description": "Ship Passenger Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.refuelling",
          "description": "Nautical Refuelling Facility",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.slipway",
          "description": "Slipway",
          "type": "string"
        },
        {
          "const": "commercial.transport.dock.tankerBerth",
          "description": "Tanker Berthing",
          "type": "string"
        },
        {
          "const": "commercial.transport.freight",
          "description": "Goods Freight Handling / Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.freight.air",
          "description": "Air Freight Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.freight.container",
          "description": "Container Freight",
          "type": "string"
        },
        {
          "const": "commercial.transport.freight.rail",
          "description": "Rail Freight Transport",
          "type": "string"
        },
        {
          "const": "commercial.transport.freight.road",
          "description": "Road Freight Transport",
          "type": "string"
        },
        {
          "const": "commercial.transport.infrastructure",
          "description": "Transport Related Infrastructure",
          "type": "string"
        },
        {
          "const": "commercial.transport.infrastructure.aqueduct",
          "description": "Aqueduct",
          "type": "string"
        },
        {
          "const": "commercial.transport.infrastructure.lock",
          "description": "Lock",
          "type": "string"
        },
        {
          "const": "commercial.transport.infrastructure.weighing",
          "description": "Weighbridge / Load Gauge",
          "type": "string"
        },
        {
          "const": "commercial.transport.infrastructure.weir",
          "description": "Weir",
          "type": "string"
        },
        {
          "const": "commercial.transport.marina",
          "description": "Marina",
          "type": "string"
        },
        {
          "const": "commercial.transport.mooring",
          "description": "Mooring",
          "type": "string"
        },
        {
          "const": "commercial.transport.overnightLorryPark",
          "description": "Overnight Lorry Park",
          "type": "string"
        },
        {
          "const": "commercial.transport.parking",
          "description": "Car / Coach / Commercial Vehicle / Taxi Parking / Park And Ride Site",
          "type": "string"
        },
        {
          "const": "commercial.transport.parking.car",
          "description": "Public Car Parking",
          "type": "string"
        },
        {
          "const": "commercial.transport.parking.coach",
          "description": "Public Coach Parking",
          "type": "string"
        },
        {
          "const": "commercial.transport.parking.commercialVehicle",
          "description": "Public Commercial Vehicle Parking",
          "type": "string"
        },
        {
          "const": "commercial.transport.parking.parkAndRide",
          "description": "Public Park And Ride",
          "type": "string"
        },
        {
          "const": "commercial.transport.railAsset",
          "description": "Railway Asset",
          "type": "string"
        },
        {
          "const": "commercial.transport.storage",
          "description": "Vehicle Storage",
          "type": "string"
        },
        {
          "const": "commercial.transport.storage.boat",
          "description": "Boat Storage",
          "type": "string"
        },
        {
          "const": "commercial.transport.storage.bus",
          "description": "Bus / Coach Depot",
          "type": "string"
        },
        {
          "const": "commercial.transport.terminal",
          "description": "Station / Interchange / Terminal / Halt",
          "type": "string"
        },
        {
          "const": "commercial.transport.terminal.train",
          "description": "Train station",
          "type": "string"
        },
        {
          "const": "commercial.transport.terminal.bus",
          "description": "Bus station",
          "type": "string"
        },
        {
          "const": "commercial.transport.terminal.vehicularRail",
          "description": "Vehicular Rail Terminal",
          "type": "string"
        },
        {
          "const": "commercial.transport.track",
          "description": "Transport Track / Way",
          "type": "string"
        },
        {
          "const": "commercial.transport.track.cable",
          "description": "Chair Lift / Cable Car / Ski Tow",
          "type": "string"
        },
        {
          "const": "commercial.transport.track.cliff",
          "description": "Cliff Railway",
          "type": "string"
        },
        {
          "const": "commercial.transport.track.monorail",
          "description": "Monorail",
          "type": "string"
        },
        {
          "const": "commercial.utility",
          "description": "Utility",
          "type": "string"
        },
        {
          "const": "commercial.utility.dam",
          "description": "Dam",
          "type": "string"
        },
        {
          "const": "commercial.utility.electricity",
          "description": "Power Station / Energy Production",
          "type": "string"
        },
        {
          "const": "commercial.utility.electricity.distribution",
          "description": "Electricity Distribution Facility",
          "type": "string"
        },
        {
          "const": "commercial.utility.electricity.production",
          "description": "Electricity Production Facility",
          "type": "string"
        },
        {
          "const": "commercial.utility.electricity.windFarm",
          "description": "Wind Farm",
          "type": "string"
        },
        {
          "const": "commercial.utility.electricity.windTurbine",
          "description": "Wind Turbine",
          "type": "string"
        },
        {
          "const": "commercial.utility.landfill",
          "description": "Landfill",
          "type": "string"
        },
        {
          "const": "commercial.utility.oilGas",
          "description": "Gas / Oil Storage / Distribution",
          "type": "string"
        },
        {
          "const": "commercial.utility.oilGas.gasGovernor",
          "description": "Gas Governor",
          "type": "string"
        },
        {
          "const": "commercial.utility.oilGas.gasHolder",
          "description": "Gas Holder",
          "type": "string"
        },
        {
          "const": "commercial.utility.oilGas.oilTerminal",
          "description": "Oil Terminal",
          "type": "string"
        },
        {
          "const": "commercial.utility.other",
          "description": "Other Utility Use",
          "type": "string"
        },
        {
          "const": "commercial.utility.other.cableTerminal",
          "description": "Cable Terminal Station",
          "type": "string"
        },
        {
          "const": "commercial.utility.other.observatory",
          "description": "Observatory",
          "type": "string"
        },
        {
          "const": "commercial.utility.other.radar",
          "description": "Radar Station",
          "type": "string"
        },
        {
          "const": "commercial.utility.other.satelliteEarth",
          "description": "Satellite Earth Station",
          "type": "string"
        },
        {
          "const": "commercial.utility.publicPhone.box",
          "description": "Telephone Box",
          "type": "string"
        },
        {
          "const": "commercial.utility.publicPhone.other",
          "description": "Other Public Telephones",
          "type": "string"
        },
        {
          "const": "commercial.utility.SubStation",
          "description": "Electricity Sub-Station",
          "type": "string"
        },
        {
          "const": "commercial.utility.telecoms",
          "description": "Telecommunication",
          "type": "string"
        },
        {
          "const": "commercial.utility.telecoms.exchange",
          "description": "Telephone Exchange",
          "type": "string"
        },
        {
          "const": "commercial.utility.telecoms.mast",
          "description": "Telecommunications Mast",
          "type": "string"
        },
        {
          "const": "commercial.utility.wasteManagement",
          "description": "Waste Management",
          "type": "string"
        },
        {
          "const": "commercial.utility.water",
          "description": "Pump House / Pumping Station / Water Tower",
          "type": "string"
        },
        {
          "const": "commercial.utility.water.pump.control",
          "description": "Water Controlling / Pumping",
          "type": "string"
        },
        {
          "const": "commercial.utility.water.pump.distribution",
          "description": "Water Distribution / Pumping",
          "type": "string"
        },
        {
          "const": "commercial.utility.water.qualityMonitoring",
          "description": "Water Quality Monitoring",
          "type": "string"
        },
        {
          "const": "commercial.utility.water.storage",
          "description": "Water Storage",
          "type": "string"
        },
        {
          "const": "commercial.utility.waterTreatment",
          "description": "Water / Waste Water / Sewage Treatment Works",
          "type": "string"
        },
        {
          "const": "commercial.utility.waterTreatment.waste",
          "description": "Waste Water Treatment",
          "type": "string"
        },
        {
          "const": "commercial.utility.waterTreatment.water",
          "description": "Water Treatment",
          "type": "string"
        },
        {
          "const": "commercial.utility.water.waste",
          "description": "Waste Water Distribution / Pumping",
          "type": "string"
        },
        {
          "const": "dualUse",
          "description": "Dual Use",
          "type": "string"
        },
        {
          "const": "object",
          "description": "Object of Interest",
          "type": "string"
        },
        {
          "const": "object.archaeological",
          "description": "Archaeological Dig Site",
          "type": "string"
        },
        {
          "const": "object.monument",
          "description": "Monument",
          "type": "string"
        },
        {
          "const": "object.monument.memorial",
          "description": "Memorial / Market Cross",
          "type": "string"
        },
        {
          "const": "object.monument.other",
          "description": "Other Structure",
          "type": "string"
        },
        {
          "const": "object.monument.other.art",
          "description": "Permanent Art Display / Sculpture",
          "type": "string"
        },
        {
          "const": "object.monument.other.boundaryStone",
          "description": "Boundary Stone",
          "type": "string"
        },
        {
          "const": "object.monument.other.waterFeature",
          "description": "Cascade / Fountain",
          "type": "string"
        },
        {
          "const": "object.monument.other.windmill",
          "description": "Windmill (Inactive)",
          "type": "string"
        },
        {
          "const": "object.monument.ruin",
          "description": "Castle / Historic Ruin",
          "type": "string"
        },
        {
          "const": "object.monument.statue",
          "description": "Statue",
          "type": "string"
        },
        {
          "const": "object.monument.vertical",
          "description": "Obelisk / Milestone / Standing Stone",
          "type": "string"
        },
        {
          "const": "object.monument.vertical.obelisk",
          "description": "Obelisk",
          "type": "string"
        },
        {
          "const": "object.monument.vertical.standingStone",
          "description": "Standing Stone",
          "type": "string"
        },
        {
          "const": "object.religious",
          "description": "Place Of Worship",
          "type": "string"
        },
        {
          "const": "object.religious.building",
          "description": "Religious building",
          "type": "string"
        },
        {
          "const": "object.religious.building.abbey",
          "description": "Abbey",
          "type": "string"
        },
        {
          "const": "object.religious.building.cathedral",
          "description": "Cathedral",
          "type": "string"
        },
        {
          "const": "object.religious.building.chapel",
          "description": "Chapel",
          "type": "string"
        },
        {
          "const": "object.religious.building.church",
          "description": "Church",
          "type": "string"
        },
        {
          "const": "object.religious.building.gurdwara",
          "description": "Gurdwara",
          "type": "string"
        },
        {
          "const": "object.religious.building.kingdomHall",
          "description": "Kingdom Hall",
          "type": "string"
        },
        {
          "const": "object.religious.building.lychGate",
          "description": "Lych Gate",
          "type": "string"
        },
        {
          "const": "object.religious.building.minster",
          "description": "Minster",
          "type": "string"
        },
        {
          "const": "object.religious.building.mosque",
          "description": "Mosque",
          "type": "string"
        },
        {
          "const": "object.religious.building.stupa",
          "description": "Stupa",
          "type": "string"
        },
        {
          "const": "object.religious.building.synagogue",
          "description": "Synagogue",
          "type": "string"
        },
        {
          "const": "object.religious.building.temple",
          "description": "Temple",
          "type": "string"
        },
        {
          "const": "object.statelyHome",
          "description": "Stately Home",
          "type": "string"
        },
        {
          "const": "object.underground",
          "description": "Underground Feature",
          "type": "string"
        },
        {
          "const": "object.underground.cave",
          "description": "Cave",
          "type": "string"
        },
        {
          "const": "object.underground.hole",
          "description": "Pothole / Natural Hole",
          "type": "string"
        },
        {
          "const": "object.underground.other",
          "description": "Other Underground Feature",
          "type": "string"
        },
        {
          "const": "object.underground.other.cellar",
          "description": "Cellar",
          "type": "string"
        },
        {
          "const": "object.underground.other.extraction",
          "description": "Disused Mine",
          "type": "string"
        },
        {
          "const": "object.underground.other.extraction.mine",
          "description": "Mineral Mining / Inactive",
          "type": "string"
        },
        {
          "const": "object.underground.other.extraction.oilGas",
          "description": "Oil And / Gas Extraction/ Inactive",
          "type": "string"
        },
        {
          "const": "object.underground.other.extraction.quarry",
          "description": "Mineral Quarrying And / Open Extraction / Inactive",
          "type": "string"
        },
        {
          "const": "object.underground.other.water",
          "description": "Well / Spring",
          "type": "string"
        },
        {
          "const": "object.underground.other.water.spring",
          "description": "Spring",
          "type": "string"
        },
        {
          "const": "object.underground.other.water.well",
          "description": "Well",
          "type": "string"
        },
        {
          "const": "other.agriculture",
          "description": "Agricultural Support Objects",
          "type": "string"
        },
        {
          "const": "other.agriculture.currick",
          "description": "Currick",
          "type": "string"
        },
        {
          "const": "other.agriculture.fishPen",
          "description": "Fish Ladder / Lock / Pen / Trap",
          "type": "string"
        },
        {
          "const": "other.agriculture.livestockPen",
          "description": "Livestock Pen / Dip",
          "type": "string"
        },
        {
          "const": "other.agriculture.slurry",
          "description": "Slurry Bed / Pit",
          "type": "string"
        },
        {
          "const": "other.coastal",
          "description": "Coastal Protection / Flood Prevention",
          "type": "string"
        },
        {
          "const": "other.coastal.floodGate",
          "description": "Flood Gate / Flood Sluice Gate / Flood Valve",
          "type": "string"
        },
        {
          "const": "other.coastal.groyne",
          "description": "Groyne",
          "type": "string"
        },
        {
          "const": "other.coastal.ripRap",
          "description": "Rip-Rap",
          "type": "string"
        },
        {
          "const": "other.coastal.wall",
          "description": "Boulder Wall / Sea Wall",
          "type": "string"
        },
        {
          "const": "other.emergency",
          "description": "Emergency Support",
          "type": "string"
        },
        {
          "const": "other.emergency.fire",
          "description": "Fire Alarm Structure / Fire Observation Tower / Fire Beater Facility",
          "type": "string"
        },
        {
          "const": "other.emergency.firstAid",
          "description": "Beach Office / First Aid Facility",
          "type": "string"
        },
        {
          "const": "other.emergency.floatAids",
          "description": "LIfe / Belt / Buoy / Float / Jacket / Safety Rope",
          "type": "string"
        },
        {
          "const": "other.emergency.lifeguard",
          "description": "Lifeguard Facility",
          "type": "string"
        },
        {
          "const": "other.emergency.telephone",
          "description": "Emergency Telephone (Non Motorway)",
          "type": "string"
        },
        {
          "const": "other.emergency.warning",
          "description": "Emergency Equipment Point / Emergency Siren / Warning Flag",
          "type": "string"
        },
        {
          "const": "other.historic",
          "description": "Historical Site / Object",
          "type": "string"
        },
        {
          "const": "other.historic.structure",
          "description": "Historic Structure / Object",
          "type": "string"
        },
        {
          "const": "other.industrial",
          "description": "Industrial Support",
          "type": "string"
        },
        {
          "const": "other.industrial.aditIncline",
          "description": "Adit / Incline / Level",
          "type": "string"
        },
        {
          "const": "other.industrial.caissonDock",
          "description": "Caisson / Dry Dock / Grid",
          "type": "string"
        },
        {
          "const": "other.industrial.channel",
          "description": "Channel / Conveyor / Conduit / Pipe",
          "type": "string"
        },
        {
          "const": "other.industrial.chimney",
          "description": "Chimney / Flue",
          "type": "string"
        },
        {
          "const": "other.industrial.coolingTower",
          "description": "Cooling Tower",
          "type": "string"
        },
        {
          "const": "other.industrial.crane",
          "description": "Crane / Hoist / Winch / Material Elevator",
          "type": "string"
        },
        {
          "const": "other.industrial.discharge",
          "description": "Grab / Skip / Other Industrial Waste Machinery / Discharging",
          "type": "string"
        },
        {
          "const": "other.industrial.flareStack",
          "description": "Flare Stack",
          "type": "string"
        },
        {
          "const": "other.industrial.kiln",
          "description": "Kiln / Oven / Smelter",
          "type": "string"
        },
        {
          "const": "other.industrial.manholeShaft",
          "description": "Manhole / Shaft",
          "type": "string"
        },
        {
          "const": "other.industrial.overflowSluiceValve",
          "description": "Industrial Overflow / Sluice / Valve / Valve Housing",
          "type": "string"
        },
        {
          "const": "other.industrial.pylon.electricity",
          "description": "Electricity Distribution Pole / Pylon",
          "type": "string"
        },
        {
          "const": "other.industrial.pylon.telecom",
          "description": "Telephone Pole / Post",
          "type": "string"
        },
        {
          "const": "other.industrial.siloTank",
          "description": "Hopper / Silo / Cistern / Tank",
          "type": "string"
        },
        {
          "const": "other.industrial.solarPanel",
          "description": "Solar Panel / Waterwheel",
          "type": "string"
        },
        {
          "const": "other.leisure",
          "description": "Sport / Leisure Support",
          "type": "string"
        },
        {
          "const": "other.leisure.gallop",
          "description": "Gallop / Ride",
          "type": "string"
        },
        {
          "const": "other.leisure.hide",
          "description": "Butt / Hide",
          "type": "string"
        },
        {
          "const": "other.leisure.modelRailway",
          "description": "Miniature Railway",
          "type": "string"
        },
        {
          "const": "other.mail",
          "description": "Royal Mail Infrastructure",
          "type": "string"
        },
        {
          "const": "other.mail.additionalAddressee",
          "description": "Additional Mail / Packet Addressee",
          "type": "string"
        },
        {
          "const": "other.mail.deliveryBox",
          "description": "Postal Delivery Box / Pouch",
          "type": "string"
        },
        {
          "const": "other.mail.POBox",
          "description": "PO Box",
          "type": "string"
        },
        {
          "const": "other.mail.postBox",
          "description": "Postal Box",
          "type": "string"
        },
        {
          "const": "other.natural",
          "description": "Significant Natural Object",
          "type": "string"
        },
        {
          "const": "other.natural.hole",
          "description": "Natural Hole (Blow / Shake / Swallow)",
          "type": "string"
        },
        {
          "const": "other.natural.rock",
          "description": "Boundary / Significant Rock / Boulder",
          "type": "string"
        },
        {
          "const": "other.natural.tree",
          "description": "Boundary / Significant / Historic Tree / Pollard",
          "type": "string"
        },
        {
          "const": "other.navigation.guidePost",
          "description": "Guide Post",
          "type": "string"
        },
        {
          "const": "other.navigation.nautical.beacon",
          "description": "Nautical Navigation Beacon / Light",
          "type": "string"
        },
        {
          "const": "other.navigation.road",
          "description": "Aid To Road Navigation",
          "type": "string"
        },
        {
          "const": "other.ornamental",
          "description": "Ornamental / Cultural Object",
          "type": "string"
        },
        {
          "const": "other.ornamental.maze",
          "description": "Maze",
          "type": "string"
        },
        {
          "const": "other.ornamental.object",
          "description": "Simple Ornamental Object",
          "type": "string"
        },
        {
          "const": "other.ornamental.tomb",
          "description": "Mausoleum / Tomb / Grave",
          "type": "string"
        },
        {
          "const": "other.scientific",
          "description": "Scientific / Observation Support",
          "type": "string"
        },
        {
          "const": "other.scientific.astronomy",
          "description": "Telescope / Observation Infrastructure / Astronomy",
          "type": "string"
        },
        {
          "const": "other.scientific.meteo",
          "description": "Meteorological Station / Equipment",
          "type": "string"
        },
        {
          "const": "other.scientific.radarSatellite",
          "description": "Radar / Satellite Infrastructure",
          "type": "string"
        },
        {
          "const": "other.streetFurniture",
          "description": "Street Furniture",
          "type": "string"
        },
        {
          "const": "other.transport",
          "description": "Transport Support",
          "type": "string"
        },
        {
          "const": "other.transport.bridge",
          "description": "Footbridge / Walkway",
          "type": "string"
        },
        {
          "const": "other.transport.cattleGridFord",
          "description": "Cattle Grid / Ford",
          "type": "string"
        },
        {
          "const": "other.transport.customs",
          "description": "Customs Inspection Facility",
          "type": "string"
        },
        {
          "const": "other.transport.goodsTramway",
          "description": "Goods Tramway",
          "type": "string"
        },
        {
          "const": "other.transport.layby",
          "description": "Lay-By",
          "type": "string"
        },
        {
          "const": "other.transport.mailPickUp",
          "description": "Mail Pick Up",
          "type": "string"
        },
        {
          "const": "other.transport.post",
          "description": "Pole / Post / Bollard (Restricting Vehicular Access)",
          "type": "string"
        },
        {
          "const": "other.transport.rail.buffer",
          "description": "Railway Buffer",
          "type": "string"
        },
        {
          "const": "other.transport.rail.crossing.pedestrian",
          "description": "Railway Pedestrian Crossing",
          "type": "string"
        },
        {
          "const": "other.transport.rail.crossing.vehicles",
          "description": "Level Crossing",
          "type": "string"
        },
        {
          "const": "other.transport.rail.drag",
          "description": "Rail Drag",
          "type": "string"
        },
        {
          "const": "other.transport.rail.infrastructure",
          "description": "Rail Infrastructure Services",
          "type": "string"
        },
        {
          "const": "other.transport.rail.lighting",
          "description": "Railway Lighting",
          "type": "string"
        },
        {
          "const": "other.transport.rail.marker.km",
          "description": "Rail Kilometre Distance Marker",
          "type": "string"
        },
        {
          "const": "other.transport.rail.market.mile",
          "description": "Rail Mile Distance Marker",
          "type": "string"
        },
        {
          "const": "other.transport.rail.signals",
          "description": "Rail Signalling",
          "type": "string"
        },
        {
          "const": "other.transport.rail.traverse",
          "description": "Railway Traverse",
          "type": "string"
        },
        {
          "const": "other.transport.rail.turntable",
          "description": "Railway Turntable",
          "type": "string"
        },
        {
          "const": "other.transport.rail.weighbridge",
          "description": "Rail Weighbridge",
          "type": "string"
        },
        {
          "const": "other.transport.road.drag",
          "description": "Road Drag",
          "type": "string"
        },
        {
          "const": "other.transport.road.infrastructure",
          "description": "Road Infrastructure Services",
          "type": "string"
        },
        {
          "const": "other.transport.road.marker.mile",
          "description": "Road Mile Distance Marker",
          "type": "string"
        },
        {
          "const": "other.transport.road.market.km",
          "description": "Road Kilometre Distance Marker",
          "type": "string"
        },
        {
          "const": "other.transport.road.turntable",
          "description": "Road Turntable",
          "type": "string"
        },
        {
          "const": "other.transport.road.vehicleDip",
          "description": "Vehicle Dip",
          "type": "string"
        },
        {
          "const": "other.transport.stepsLiftEscalator",
          "description": "Elevator / Escalator / Steps",
          "type": "string"
        },
        {
          "const": "other.transport.subway",
          "description": "Subway / Underpass",
          "type": "string"
        },
        {
          "const": "other.unsupported",
          "description": "Unsupported Site",
          "type": "string"
        },
        {
          "const": "other.unsupported.cycleParking",
          "description": "Cycle Parking Facility",
          "type": "string"
        },
        {
          "const": "other.unsupported.picnic",
          "description": "Picnic / Barbecue Site",
          "type": "string"
        },
        {
          "const": "other.unsupported.shelter",
          "description": "Shelter (Not Including Bus Shelter)",
          "type": "string"
        },
        {
          "const": "other.unsupported.travellingPersons",
          "description": "Travelling Persons Site",
          "type": "string"
        },
        {
          "const": "parent.street",
          "description": "Street Record",
          "type": "string"
        },
        {
          "const": "residential",
          "description": "Residential",
          "type": "string"
        },
        {
          "const": "residential.building",
          "description": "Ancillary Building",
          "type": "string"
        },
        {
          "const": "residential.carParkingSpace",
          "description": "Car Park Space",
          "type": "string"
        },
        {
          "const": "residential.carParkingSpace.allocated",
          "description": "Allocated Parking",
          "type": "string"
        },
        {
          "const": "residential.dwelling",
          "description": "Residential dwelling",
          "type": "string"
        },
        {
          "const": "residential.dwelling.boat",
          "description": "House Boat",
          "type": "string"
        },
        {
          "const": "residential.dwelling.caravan",
          "description": "Caravan",
          "type": "string"
        },
        {
          "const": "residential.dwelling.flat",
          "description": "Flat",
          "type": "string"
        },
        {
          "const": "residential.dwelling.holiday",
          "description": "Privately Owned Holiday Caravan / Chalet",
          "type": "string"
        },
        {
          "const": "residential.dwelling.house.detached",
          "description": "Detached",
          "type": "string"
        },
        {
          "const": "residential.dwelling.house.semiDetached",
          "description": "Semi-detached",
          "type": "string"
        },
        {
          "const": "residential.dwelling.house.terrace",
          "description": "Terrace",
          "type": "string"
        },
        {
          "const": "residential.dwelling.shelteredAccommodation",
          "description": "Sheltered Accommodation",
          "type": "string"
        },
        {
          "const": "residential.garage",
          "description": "Garage",
          "type": "string"
        },
        {
          "const": "residential.garage.court",
          "description": "Lock-Up Garage / Garage Court",
          "type": "string"
        },
        {
          "const": "residential.HMO",
          "description": "House In Multiple Occupation",
          "type": "string"
        },
        {
          "const": "residential.HMO.bedsit",
          "description": "HMO Bedsit / Other Non Self Contained Accommodation",
          "type": "string"
        },
        {
          "const": "residential.HMO.parent",
          "description": "HMO Parent",
          "type": "string"
        },
        {
          "const": "residential.HMO.undivided",
          "description": "HMO Not Further Divided",
          "type": "string"
        },
        {
          "const": "residential.institution",
          "description": "Residential Institution",
          "type": "string"
        },
        {
          "const": "residential.institution.care",
          "description": "Care / Nursing Home",
          "type": "string"
        },
        {
          "const": "residential.institution.communal",
          "description": "Communal Residence",
          "type": "string"
        },
        {
          "const": "residential.institution.education",
          "description": "Residential Education",
          "type": "string"
        },
        {
          "const": "residential.institution.noncommercial",
          "description": "Non-Commercial Lodgings",
          "type": "string"
        },
        {
          "const": "residential.institution.religious",
          "description": "Religious Community",
          "type": "string"
        },
        {
          "const": "unclassified",
          "description": "Unclassified",
          "type": "string"
        },
        {
          "const": "unclassified.awaitingclassification",
          "description": "Awaiting Classification",
          "type": "string"
        },
        {
          "const": "unclassified.pendingInvestigation",
          "description": "Pending Internal Investigation",
          "type": "string"
        }
      ],
      "description": "Property types derived from Basic Land and Property Unit (BLPU) classification codes"
    },
    "ProposalBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnglandProposal"
        },
        {
          "$ref": "#/definitions/LondonProposal"
        }
      ],
      "description": "Information about the proposed works and any changes to the property"
    },
    "ProposalDates": {
      "additionalProperties": false,
      "description": "When the proposed works will start and be completed by, not required for all application types",
      "properties": {
        "completion": {
          "$ref": "#/definitions/Date"
        },
        "start": {
          "$ref": "#/definitions/Date"
        }
      },
      "type": "object"
    },
    "ProposedAddress": {
      "additionalProperties": false,
      "description": "Address information for sites without a known Unique Property Reference Number (UPRN)",
      "properties": {
        "latitude": {
          "description": "Latitude coordinate in EPSG:4326 (WGS84)",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate in EPSG:4326 (WGS84)",
          "type": "number"
        },
        "source": {
          "const": "Proposed by applicant",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "x": {
          "description": "Easting coordinate in British National Grid (OSGB36)",
          "type": "number"
        },
        "y": {
          "description": "Northing coordinate in British National Grid (OSGB36)",
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude",
        "source",
        "title",
        "x",
        "y"
      ],
      "type": "object"
    },
    "ProtectedSpaceDesignation": {
      "$id": "#ProtectedSpaceDesignation",
      "anyOf": [
        {
          "const": "boroughGradeOne",
          "description": "Site of Borough Grade 1 Importance",
          "type": "string"
        },
        {
          "const": "boroughGradeTwo",
          "description": "Site of Borough Grade 2 Importance",
          "type": "string"
        },
        {
          "const": "local",
          "description": "Site of Local Importance",
          "type": "string"
        },
        {
          "const": "localReserve",
          "description": "Local Nature Reserve",
          "type": "string"
        },
        {
          "const": "metropolitan",
          "description": "Site of Metropolitan Importance",
          "type": "string"
        },
        {
          "const": "none",
          "description": "Not designated",
          "type": "string"
        },
        {
          "const": "SSSI",
          "description": "Sites of Special Scientific Interest",
          "type": "string"
        }
      ],
      "description": "Designations of natural protected spaces"
    },
    "PrototypeFileType": {
      "$id": "#FileType",
      "anyOf": [
        {
          "const": "accessRoadsRightsOfWayDetails",
          "description": "Details of impact on access, roads, and rights of way",
          "type": "string"
        },
        {
          "const": "affordableHousingStatement",
          "description": "Affordable housing statement",
          "type": "string"
        },
        {
          "const": "arboriculturistReport",
          "description": "Arboriculturist report",
          "type": "string"
        },
        {
          "const": "bankStatement",
          "description": "Bank statement",
          "type": "string"
        },
        {
          "const": "basementImpactStatement",
          "description": "Basement impact statement",
          "type": "string"
        },
        {
          "const": "bioaerosolAssessment",
          "description": "Bio-aerosol assessment",
          "type": "string"
        },
        {
          "const": "birdstrikeRiskManagementPlan",
          "description": "Birdstrike risk management plan",
          "type": "string"
        },
        {
          "const": "boreholeOrTrialPitAnalysis",
          "description": "Borehole or trial pit analysis",
          "type": "string"
        },
        {
          "const": "buildingControlCertificate",
          "description": "Building control certificate",
          "type": "string"
        },
        {
          "const": "conditionSurvey",
          "description": "Structural or building condition survey",
          "type": "string"
        },
        {
          "const": "constructionInvoice",
          "description": "Construction invoice",
          "type": "string"
        },
        {
          "const": "contaminationReport",
          "description": "Contamination report",
          "type": "string"
        },
        {
          "const": "councilTaxBill",
          "description": "Council tax bill",
          "type": "string"
        },
        {
          "const": "crimePreventionStrategy",
          "description": "Crime prevention strategy",
          "type": "string"
        },
        {
          "const": "designAndAccessStatement",
          "description": "Design and Access Statement",
          "type": "string"
        },
        {
          "const": "disabilityExemptionEvidence",
          "description": "Evidence for application fee exemption - disability",
          "type": "string"
        },
        {
          "const": "ecologyReport",
          "description": "Ecology report",
          "type": "string"
        },
        {
          "const": "elevations.existing",
          "description": "Elevations - existing",
          "type": "string"
        },
        {
          "const": "elevations.proposed",
          "description": "Elevations - proposed",
          "type": "string"
        },
        {
          "const": "emissionsMitigationAndMonitoringScheme",
          "description": "Scheme for mitigation and monitoring of emissions (dust, odour and vibrations)",
          "type": "string"
        },
        {
          "const": "energyStatement",
          "description": "Energy statement",
          "type": "string"
        },
        {
          "const": "environmentalImpactAssessment",
          "description": "Environmental Impact Assessment (EIA)",
          "type": "string"
        },
        {
          "const": "externalMaterialsDetails",
          "description": "External materials details",
          "type": "string"
        },
        {
          "const": "fireSafetyReport",
          "description": "Fire safety report",
          "type": "string"
        },
        {
          "const": "floodRiskAssessment",
          "description": "Flood risk assessment (FRA)",
          "type": "string"
        },
        {
          "const": "floorPlan.existing",
          "description": "Floor plan - existing",
          "type": "string"
        },
        {
          "const": "floorPlan.proposed",
          "description": "Floor plan - proposed",
          "type": "string"
        },
        {
          "const": "foulDrainageAssessment",
          "description": "Foul drainage assessment",
          "type": "string"
        },
        {
          "const": "geodiversityAssessment",
          "description": "Geodiversity assessment",
          "type": "string"
        },
        {
          "const": "hedgerowsInformation",
          "description": "Plans showing the stretches of hedgerows to be removed",
          "type": "string"
        },
        {
          "const": "hedgerowsInformation.plantingDate",
          "description": "Evidence of the date of planting of the removed hedgerows",
          "type": "string"
        },
        {
          "const": "heritageStatement",
          "description": "Heritage Statement",
          "type": "string"
        },
        {
          "const": "hydrologicalAssessment",
          "description": "Hydrological and hydrogeological assessment",
          "type": "string"
        },
        {
          "const": "hydrologyReport",
          "description": "Hydrology report",
          "type": "string"
        },
        {
          "const": "internalElevations",
          "description": "Internal elevations",
          "type": "string"
        },
        {
          "const": "internalSections",
          "description": "Internal sections",
          "type": "string"
        },
        {
          "const": "joinersReport",
          "description": "Joiner's report",
          "type": "string"
        },
        {
          "const": "joinerySections",
          "description": "Joinery section report",
          "type": "string"
        },
        {
          "const": "landContaminationAssessment",
          "description": "Land contamination assessment",
          "type": "string"
        },
        {
          "const": "landscapeAndVisualImpactAssessment",
          "description": "Landscape and visual impact assessment (LVIA)",
          "type": "string"
        },
        {
          "const": "landscapeStrategy",
          "description": "Landscape strategy or landscape plan",
          "type": "string"
        },
        {
          "const": "lightingAssessment",
          "description": "Lighting assessment",
          "type": "string"
        },
        {
          "const": "litterVerminAndBirdControlDetails",
          "description": "Details of litter, vermin and bird control",
          "type": "string"
        },
        {
          "const": "locationPlan",
          "description": "Location plan",
          "type": "string"
        },
        {
          "const": "methodStatement",
          "description": "Method statement",
          "type": "string"
        },
        {
          "const": "mineralsAndWasteAssessment",
          "description": "Minerals and waste assessment",
          "type": "string"
        },
        {
          "const": "necessaryInformation",
          "description": "Information the authority considers necessary for the application",
          "type": "string"
        },
        {
          "const": "newDwellingsSchedule",
          "description": "New dwellings schedule",
          "type": "string"
        },
        {
          "const": "noiseAssessment",
          "description": "Noise assessment",
          "type": "string"
        },
        {
          "const": "openSpaceAssessment",
          "description": "Open space assessment",
          "type": "string"
        },
        {
          "const": "otherDocument",
          "description": "Other - document",
          "type": "string"
        },
        {
          "const": "otherDrawing",
          "description": "Other - drawing",
          "type": "string"
        },
        {
          "const": "otherEvidence",
          "description": "Other - evidence or correspondence",
          "type": "string"
        },
        {
          "const": "parkingPlan",
          "description": "Parking plan",
          "type": "string"
        },
        {
          "const": "photographs.existing",
          "description": "Photographs - existing",
          "type": "string"
        },
        {
          "const": "photographs.proposed",
          "description": "Photographs - proposed",
          "type": "string"
        },
        {
          "const": "planningStatement",
          "description": "Planning statement",
          "type": "string"
        },
        {
          "const": "recycleWasteStorageDetails",
          "description": "Recyclable waste storage details",
          "type": "string"
        },
        {
          "const": "relevantInformation",
          "description": "Information the applicant considers relevant to the application",
          "type": "string"
        },
        {
          "const": "residentialUnitsDetails",
          "description": "Residential units details",
          "type": "string"
        },
        {
          "const": "roofPlan.existing",
          "description": "Roof plan - existing",
          "type": "string"
        },
        {
          "const": "roofPlan.proposed",
          "description": "Roof plan - proposed",
          "type": "string"
        },
        {
          "const": "sections.existing",
          "description": "Sections - existing",
          "type": "string"
        },
        {
          "const": "sections.proposed",
          "description": "Sections - proposed",
          "type": "string"
        },
        {
          "const": "sitePlan.existing",
          "description": "Site plan - existing",
          "type": "string"
        },
        {
          "const": "sitePlan.proposed",
          "description": "Site plan - proposed",
          "type": "string"
        },
        {
          "const": "sketchPlan",
          "description": "Sketch plan",
          "type": "string"
        },
        {
          "const": "statementOfCommunityInvolvement",
          "description": "Statement of community involvement",
          "type": "string"
        },
        {
          "const": "statutoryDeclaration",
          "description": "Statutory declaration",
          "type": "string"
        },
        {
          "const": "storageTreatmentAndWasteDisposalDetails",
          "description": "Details of storage treatment or disposal of waste",
          "type": "string"
        },
        {
          "const": "streetScene",
          "description": "Street scene drawing",
          "type": "string"
        },
        {
          "const": "subsidenceReport",
          "description": "Subsidence report",
          "type": "string"
        },
        {
          "const": "sunlightAndDaylightReport",
          "description": "Sunlight and daylight report",
          "type": "string"
        },
        {
          "const": "sustainabilityStatement",
          "description": "Sustainability statement",
          "type": "string"
        },
        {
          "const": "technicalEvidence",
          "description": "Technical evidence",
          "type": "string"
        },
        {
          "const": "technicalSpecification",
          "description": "Technical specification",
          "type": "string"
        },
        {
          "const": "tenancyAgreement",
          "description": "Tenancy agreement",
          "type": "string"
        },
        {
          "const": "tenancyInvoice",
          "description": "Tenancy invoice",
          "type": "string"
        },
        {
          "const": "townCentreImpactAssessment",
          "description": "Town centre uses - Impact assessment",
          "type": "string"
        },
        {
          "const": "townCentreSequentialAssessment",
          "description": "Town centre uses - Sequential assessment",
          "type": "string"
        },
        {
          "const": "transportAssessment",
          "description": "Transport assessment",
          "type": "string"
        },
        {
          "const": "travelPlan",
          "description": "Travel plan",
          "type": "string"
        },
        {
          "const": "treeAndHedgeLocation",
          "description": "Location of trees and hedges",
          "type": "string"
        },
        {
          "const": "treeAndHedgeRemovedOrPruned",
          "description": "Removed or pruned trees and hedges",
          "type": "string"
        },
        {
          "const": "treeCanopyCalculator",
          "description": "Tree canopy calculator",
          "type": "string"
        },
        {
          "const": "treeConditionReport",
          "description": "Tree condition report",
          "type": "string"
        },
        {
          "const": "treePlan",
          "description": "Tree plan",
          "type": "string"
        },
        {
          "const": "treesReport",
          "description": "Trees report",
          "type": "string"
        },
        {
          "const": "unitPlan.existing",
          "description": "Unit plan - existing",
          "type": "string"
        },
        {
          "const": "unitPlan.proposed",
          "description": "Unit plan - proposed",
          "type": "string"
        },
        {
          "const": "usePlan.existing",
          "description": "Use plan - existing",
          "type": "string"
        },
        {
          "const": "usePlan.proposed",
          "description": "Use plan - proposed",
          "type": "string"
        },
        {
          "const": "utilityBill",
          "description": "Utility bill",
          "type": "string"
        },
        {
          "const": "utilitiesStatement",
          "description": "Utilities statement",
          "type": "string"
        },
        {
          "const": "ventilationStatement",
          "description": "Ventilation or extraction statement",
          "type": "string"
        },
        {
          "const": "viabilityAppraisal",
          "description": "Viability Appraisal",
          "type": "string"
        },
        {
          "const": "visualisations",
          "description": "Visualisations",
          "type": "string"
        },
        {
          "const": "wasteAndRecyclingStrategy",
          "description": "Waste and recycling strategy",
          "type": "string"
        },
        {
          "const": "wasteStorageDetails",
          "description": "Waste storage details",
          "type": "string"
        },
        {
          "const": "waterEnvironmentAssessment",
          "description": "Water environment assessment",
          "type": "string"
        }
      ],
      "description": "Types of planning documents and drawings"
    },
    "PrototypePlanXMetadata": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "$ref": "#/definitions/UUID",
          "description": "Unique identifier for this application"
        },
        "organisation": {
          "description": "The reference code for the organisation responsible for processing this planning application, sourced from planning.data.gov.uk/dataset/local-authority",
          "maxLength": 4,
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/URL"
        },
        "service": {
          "additionalProperties": false,
          "properties": {
            "fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FeeExplanation"
                },
                {
                  "$ref": "#/definitions/FeeExplanationNotApplicable"
                }
              ]
            },
            "files": {
              "$ref": "#/definitions/PrototypeRequestedFiles"
            },
            "flowId": {
              "$ref": "#/definitions/UUID"
            },
            "overrides": {
              "$ref": "#/definitions/UserOverrides"
            },
            "url": {
              "$ref": "#/definitions/URL"
            }
          },
          "required": [
            "flowId",
            "url",
            "files",
            "fee"
          ],
          "type": "object"
        },
        "source": {
          "const": "PlanX",
          "type": "string"
        },
        "submittedAt": {
          "$ref": "#/definitions/DateTime"
        }
      },
      "required": [
        "id",
        "organisation",
        "schema",
        "service",
        "source",
        "submittedAt"
      ],
      "type": "object"
    },
    "PrototypeRequestedFiles": {
      "additionalProperties": false,
      "description": "File types requested by this service. Schema[\"files\"] will be a subset of this list based on the user's journey through the service",
      "properties": {
        "optional": {
          "items": {
            "$ref": "#/definitions/PrototypeFileType"
          },
          "type": "array"
        },
        "recommended": {
          "items": {
            "$ref": "#/definitions/PrototypeFileType"
          },
          "type": "array"
        },
        "required": {
          "items": {
            "$ref": "#/definitions/PrototypeFileType"
          },
          "type": "array"
        }
      },
      "required": [
        "required",
        "recommended",
        "optional"
      ],
      "type": "object"
    },
    "QuestionAndResponses": {
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "$ref": "#/definitions/QuestionMetaData"
        },
        "question": {
          "type": "string"
        },
        "responses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/Response"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "question",
        "responses"
      ],
      "type": "object"
    },
    "QuestionMetaData": {
      "additionalProperties": false,
      "properties": {
        "autoAnswered": {
          "type": "boolean"
        },
        "policyRefs": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "text": {
                "type": "string"
              },
              "url": {
                "$ref": "#/definitions/URL"
              }
            },
            "required": [
              "text"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "sectionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Region": {
      "description": "The region in England that contains this address sourced from planning.data.gov.uk/dataset/region, where London is a proxy for the Greater London Authority (GLA) area",
      "enum": [
        "North East",
        "North West",
        "Yorkshire and The Humber",
        "East Midlands",
        "West Midlands",
        "East of England",
        "London",
        "South East",
        "South West"
      ],
      "type": "string"
    },
    "ResidentialUnits": {
      "additionalProperties": false,
      "properties": {
        "residential": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "bedrooms": {
                "type": "number"
              },
              "identicalUnits": {
                "type": "number"
              },
              "tenure": {
                "$ref": "#/definitions/UKTenureType"
              },
              "type": {
                "$ref": "#/definitions/UKResidentialUnitType"
              }
            },
            "required": [
              "type",
              "tenure",
              "bedrooms",
              "identicalUnits"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "total": {
          "type": "number"
        }
      },
      "required": [
        "total",
        "residential"
      ],
      "type": "object"
    },
    "Response": {
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ResponseMetaData"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "ResponseMetaData": {
      "additionalProperties": false,
      "properties": {
        "flags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "options": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/Response"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "Responses": {
      "$id": "#Responses",
      "description": "The ordered list of questions, answers, and their metadata for the application",
      "items": {
        "$ref": "#/definitions/QuestionAndResponses"
      },
      "type": "array"
    },
    "SiteContact": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "role": {
              "$ref": "#/definitions/UserRoles"
            }
          },
          "required": [
            "role"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/SiteContactOther"
        }
      ]
    },
    "SiteContactOther": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "const": "other",
          "type": "string"
        }
      },
      "required": [
        "role",
        "name",
        "email",
        "phone"
      ],
      "type": "object"
    },
    "UKResidentialUnitType": {
      "$id": "#UKResidentialUnitType",
      "anyOf": [
        {
          "const": "cluster",
          "description": "Cluster flat",
          "type": "string"
        },
        {
          "const": "flat",
          "description": "Flat",
          "type": "string"
        },
        {
          "const": "house",
          "description": "House",
          "type": "string"
        },
        {
          "const": "other",
          "description": "Other",
          "type": "string"
        },
        {
          "const": "sheltered",
          "description": "Sheltered housing",
          "type": "string"
        },
        {
          "const": "studio",
          "description": "Studio or bedsit",
          "type": "string"
        }
      ],
      "description": "Residential unit types tracked throughout the UK"
    },
    "UKTenureType": {
      "$id": "#UKTenureType",
      "anyOf": [
        {
          "const": "AHO",
          "description": "Affordable home ownership",
          "type": "string"
        },
        {
          "const": "MH",
          "description": "Market housing",
          "type": "string"
        },
        {
          "const": "other",
          "description": "Other",
          "type": "string"
        },
        {
          "const": "SAIR",
          "description": "Social, affordable or interim rent",
          "type": "string"
        },
        {
          "const": "selfCustomBuild",
          "description": "Self-build and custom build",
          "type": "string"
        },
        {
          "const": "SH",
          "description": "Starter homes",
          "type": "string"
        }
      ],
      "description": "Tenure types tracked throughout the UK"
    },
    "URL": {
      "format": "uri",
      "pattern": "^https?://",
      "type": "string"
    },
    "UUID": {
      "format": "uuid",
      "type": "string"
    },
    "UserAddress": {
      "additionalProperties": false,
      "properties": {
        "country": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "town": {
          "type": "string"
        }
      },
      "required": [
        "line1",
        "town",
        "postcode"
      ],
      "type": "object"
    },
    "UserBase": {
      "additionalProperties": false,
      "properties": {
        "role": {
          "$ref": "#/definitions/UserRoles",
          "description": "The role of the user who completed the application"
        }
      },
      "required": [
        "role"
      ],
      "type": "object"
    },
    "UserOverrides": {
      "additionalProperties": false,
      "description": "Administrative data suggested by PlanX which the user overrode or changed",
      "properties": {
        "property": {
          "additionalProperties": false,
          "properties": {
            "planning": {
              "additionalProperties": false,
              "properties": {
                "designations": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "entities": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "source": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "text": {
                                      "const": "Planning Data",
                                      "type": "string"
                                    },
                                    "url": {
                                      "$ref": "#/definitions/URL"
                                    }
                                  },
                                  "required": [
                                    "text",
                                    "url"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "text": {
                                      "const": "Ordnance Survey MasterMap Highways",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "userReason": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "source",
                            "userReason"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "sourceIntersects": {
                        "const": true,
                        "type": "boolean"
                      },
                      "userIntersects": {
                        "const": false,
                        "type": "boolean"
                      },
                      "value": {
                        "$ref": "#/definitions/BasePlanningDesignation"
                      }
                    },
                    "required": [
                      "value",
                      "sourceIntersects",
                      "userIntersects",
                      "entities"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "designations"
              ],
              "type": "object"
            },
            "type": {
              "additionalProperties": false,
              "properties": {
                "sourceType": {
                  "type": "string"
                },
                "userType": {
                  "type": "string"
                }
              },
              "required": [
                "sourceType",
                "userType"
              ],
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserRoles": {
      "enum": [
        "applicant",
        "agent",
        "proxy"
      ],
      "type": "string"
    }
  },
  "description": "The (prototype) root specification for a planning application in England generated by a digital planning service",
  "title": "PrototypeApplication"
}